
SQL*Plus: Release 10.1.0.5.0 - Production on Mon Mar 9 10:52:37 2020

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP and Data Mining options

Logged in at: Mon 09-mar-2020 10:52:38 am

apps@DEV
SQL> select /* nvl(sum(sl.outstnd_amt),0) */ sl.outstnd_amt debit_amt
from lwx_ar_stmt_lines sl,
ra_customer_trx_all trx
where sl.stmt_hdr_id = 8505110
and sl.rec_type_cde = 'F3'
and sl.outstnd_amt > 0
and sl.customer_trx_id = trx.customer_trx_id(+)
and trunc(greatest(sl.due_dte, nvl(trx.creation_date, sl.due_dte))) 
      < to_date('06-feb-2020','dd-mon-yyyy') -- - 30
and (case trx.attribute5 
       when 'ET' then lwx_ar_query.get_wo_gift_card_receipt(sl.payment_schedule_id)
       when 'WO' then lwx_ar_query.get_wo_gift_card_receipt(sl.payment_schedule_id)
       when 'FC' then lwx_ar_query.get_wo_gift_card_receipt(sl.payment_schedule_id)
       else null
     end ) is null
and (   lwx_ar_invo_stmt_print.get_prepay(sl.payment_schedule_id,'N','Y') is null
     or exists (
       select 1
       from lwx_ar_stmt_lines sl2
       where sl2.stmt_hdr_id != 8505110
       and sl2.rec_type_cde = 'F3'
       and sl2.customer_trx_id = sl.customer_trx_id
     )
    )

.
 25  apps@DEV
SQL> /

no rows selected

Elapsed: 00:00:00.15
apps@DEV
SQL> 
apps@DEV
SQL> select * from rstewar.v_ar_stmt_lines where send_to_cust_nbr = 2002567196;
select * from rstewar.v_ar_stmt_lines where send_to_cust_nbr = 2002567196
                      *
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.10
apps@DEV
SQL> select * from rstewar.v_lwx_ar_stmt_lines where send_to_cust_nbr = 2002567196;
select * from rstewar.v_lwx_ar_stmt_lines where send_to_cust_nbr = 2002567196
                      *
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.10
apps@DEV
SQL> select * from rstewar.v_ar_stmt_info where send_to_cust_nbr = 2002567196;

    STMT_HDR_ID	SEND_TO_CUST_NBR              	STATEMENT_CYCLE_ID	STMT_RUN_CONC_REQ_ID	STMT_DTE            	   OVER_DUE_AMT	        DUE_AMT	     TO_PAY_AMT	STMT_DUE_DTE        	    NOT_DUE_AMT	    BALANCE_AMT	TRANS_NBR                     	RE	STMT_LINE_DTL_ID	   STMT_LINE_ID	STMT_LINE_DTL_NBR	L	CUSTOMER_TRX_LINE_ID	ORDERED_QTY_CNT	SHIPPED_QTY_CNT	ITEM_NBR                                                                                            	ALT_ITEM_NBR
---------------	------------------------------	------------------	--------------------	--------------------	---------------	---------------	---------------	--------------------	---------------	---------------	------------------------------	--	----------------	---------------	-----------------	-	--------------------	---------------	---------------	----------------------------------------------------------------------------------------------------	----------------------------------------------------------------------------------------------------
LINE_DESC_TXT

SELLING_PRICE_AMT	SELLING_DISC_AMT	   EXTENDED_AMT	     CREATED_BY	CREATION_DATE       	LAST_UPDATED_BY	LAST_UPDATE_DATE    	LAST_UPDATE_LOGIN
-----------------	----------------	---------------	---------------	--------------------	---------------	--------------------	-----------------
        8505111	2002567196                    	              3000	           130867641	06-MAR-2020 12:31:33	         199.99	              0	         199.99	01-APR-2020 23:59:59	              0	         199.99	28619289(15347856)            	F3	                	               	                 	 	                    	               	               	                                                                                                    	

                 	                	               	               	                    	               	                    	


Elapsed: 00:00:00.72
apps@DEV
SQL> set line 32767
apps@DEV
SQL> /

    STMT_HDR_ID	SEND_TO_CUST_NBR              	STATEMENT_CYCLE_ID	STMT_RUN_CONC_REQ_ID	STMT_DTE            	   OVER_DUE_AMT	        DUE_AMT	     TO_PAY_AMT	STMT_DUE_DTE        	    NOT_DUE_AMT	    BALANCE_AMT	TRANS_NBR                     	RE	STMT_LINE_DTL_ID	   STMT_LINE_ID	STMT_LINE_DTL_NBR	L	CUSTOMER_TRX_LINE_ID	ORDERED_QTY_CNT	SHIPPED_QTY_CNT	ITEM_NBR                                                                                            	ALT_ITEM_NBR                                                                                        		SELLING_PRICE_AMT	SELLING_DISC_AMT	   EXTENDED_AMT	     CREATED_BY	CREATION_DATE       	LAST_UPDATED_BY	LAST_UPDATE_DATE    	LAST_UPDATE_LOGIN
---------------	------------------------------	------------------	--------------------	--------------------	---------------	---------------	---------------	--------------------	---------------	---------------	------------------------------	--	----------------	---------------	-----------------	-	--------------------	---------------	---------------	----------------------------------------------------------------------------------------------------	----------------------------------------------------------------------------------------------------		-----------------	----------------	---------------	---------------	--------------------	---------------	--------------------	-----------------
        8505111	2002567196                    	              3000	           130867641	06-MAR-2020 12:31:33	         199.99	              0	         199.99	01-APR-2020 23:59:59	              0	         199.99	28619289(15347856)            	F3	                	               	                 	 	                    	               	               	                                                                                                    	                                                                                                    		                 	                	               	               	                    	               	                    	

Elapsed: 00:00:00.84
apps@DEV
SQL> select * from lwx_ar_stmt_lines where send_to_cust_nbr = 2002567196;
select * from lwx_ar_stmt_lines where send_to_cust_nbr = 2002567196
                                      *
ERROR at line 1:
ORA-00904: "SEND_TO_CUST_NBR": invalid identifier


Elapsed: 00:00:00.11
apps@DEV
SQL> select * from apps.lwx_ar_stmt_lines where send_to_cust_nbr = 2002567196;
select * from apps.lwx_ar_stmt_lines where send_to_cust_nbr = 2002567196
                                           *
ERROR at line 1:
ORA-00904: "SEND_TO_CUST_NBR": invalid identifier


Elapsed: 00:00:00.10
apps@DEV
SQL> @desc apps.lwx_ar_stmt_lines
 Name                                                              Null?    Type
 ----------------------------------------------------------------- -------- --------------------------------------------
 STMT_LINE_ID                                                      NOT NULL NUMBER(22)
 STMT_HDR_ID                                                       NOT NULL NUMBER(22)
 STMT_LINE_NBR                                                     NOT NULL NUMBER(22)
 INCL_CUR_STMT_IND                                                          VARCHAR2(1)
 REC_TYPE_CDE                                                      NOT NULL VARCHAR2(2)
 CUSTOMER_TRX_ID                                                            NUMBER(22)
 CASH_RECEIPT_ID                                                            NUMBER(22)
 PAYMENT_SCHEDULE_ID                                                        NUMBER(22)
 PAGE_CNT                                                                   NUMBER(22)
 LINE_CNT                                                                   NUMBER(22)
 LOGO_CDE                                                                   VARCHAR2(30)
 DOC_TITLE_NME                                                              VARCHAR2(40)
 REP_MSG_NME                                                                VARCHAR2(60)
 BILL_TO_CUST_NBR                                                           VARCHAR2(30)
 BILL_TO_CUST_NME                                                           VARCHAR2(360)
 BILL_TO_LINE_1_ADR                                                         VARCHAR2(240)
 BILL_TO_LINE_2_ADR                                                         VARCHAR2(240)
 BILL_TO_LINE_3_ADR                                                         VARCHAR2(240)
 BILL_TO_LINE_4_ADR                                                         VARCHAR2(240)
 BILL_TO_CITY_NME                                                           VARCHAR2(60)
 BILL_TO_STATE_CDE                                                          VARCHAR2(5)
 BILL_TO_POSTAL_CDE                                                         VARCHAR2(12)
 BILL_TO_CNTRY_NME                                                          VARCHAR2(60)
 SHIP_TO_CUST_NBR                                                           VARCHAR2(30)
 SHIP_TO_CUST_NME                                                           VARCHAR2(360)
 SHIP_TO_LINE_1_ADR                                                         VARCHAR2(240)
 SHIP_TO_LINE_2_ADR                                                         VARCHAR2(240)
 SHIP_TO_LINE_3_ADR                                                         VARCHAR2(240)
 SHIP_TO_LINE_4_ADR                                                         VARCHAR2(240)
 SHIP_TO_CITY_NME                                                           VARCHAR2(60)
 SHIP_TO_STATE_CDE                                                          VARCHAR2(5)
 SHIP_TO_POSTAL_CDE                                                         VARCHAR2(12)
 SHIP_TO_CNTRY_NME                                                          VARCHAR2(60)
 SPCL_LINE_IND                                                              VARCHAR2(1)
 TRANS_DTE                                                                  DATE
 TRANS_NBR                                                                  VARCHAR2(30)
 DOC_TYPE_NME                                                               VARCHAR2(30)
 SLS_CHNL_NME                                                               VARCHAR2(30)
 CUST_REF_NME                                                               VARCHAR2(30)
 FUT_PMT_IND                                                                VARCHAR2(1)
 PARTIAL_PMT_IND                                                            VARCHAR2(1)
 DUE_DTE                                                                    DATE
 DOC_REF_NME                                                                VARCHAR2(20)
 ORIG_AMT                                                                   NUMBER
 OUTSTND_AMT                                                                NUMBER
 TERM_MSG1_NME                                                              VARCHAR2(100)
 TERM_MSG2_NME                                                              VARCHAR2(100)
 CUST_CONT_NME                                                              VARCHAR2(100)
 CUST_CONT_PHONE_NBR                                                        VARCHAR2(50)
 ORDER_DTE                                                                  DATE
 SHIP_METH_NME                                                              VARCHAR2(100)
 SUB_TOTAL_AMT                                                              NUMBER
 SHIP_HNDL_AMT                                                              NUMBER
 TAX_AMT                                                                    NUMBER
 PMT_USED_AMT                                                               NUMBER
 TOTAL_DUE_AMT                                                              NUMBER
 MKT_MSG1_NME                                                               VARCHAR2(50)
 MKT_MSG2_NME                                                               VARCHAR2(50)
 MKT_MSG3_NME                                                               VARCHAR2(50)
 MKT_MSG4_NME                                                               VARCHAR2(50)
 CREATED_BY                                                        NOT NULL NUMBER(15)
 CREATION_DATE                                                     NOT NULL DATE
 LAST_UPDATED_BY                                                   NOT NULL NUMBER(15)
 LAST_UPDATE_DATE                                                  NOT NULL DATE
 LAST_UPDATE_LOGIN                                                          NUMBER(15)
 PURCHASE_ORDER                                                             VARCHAR2(50)
 COMMENTS                                                                   VARCHAR2(1760)

apps@DEV
SQL> select * from apps.lwx_ar_stmt_headers where send_to_cust_nbr = 2002567196;

    STMT_HDR_ID	STATEMENT_CYCLE_ID	STMT_RUN_CONC_REQ_ID	STMT_DTE            	STMT_CRNCY_CDE 	STM	   PPD_PAGE_CNT	   DTL_PAGE_CNT	  INVO_PAGE_CNT	 TOTAL_PAGE_CNT	LOGO_CDE                      	SEND_TO_CUST_ACCT_SITE_ID	SEND_TO_CUST_NBR              	SEND_TO_CUST_NME                                                                                                                                                                                                                                                                                                                                                        	SEND_TO_LINE_1_ADR                                                                                                                                                                                                                              	SEND_TO_LINE_2_ADR                                                                                                                                                                                                                              	SEND_TO_LINE_3_ADR                                                                                                                                                                                                                              	SEND_TO_LINE_4_ADR                                                                                                                                                                                                                              	SEND_TO_CITY_NME                                            	SEND_	SEND_TO_POST	SEND_TO_CNTRY_NME                                           	REP_PHONE_NBR                 	   OVER_DUE_AMT	        DUE_AMT	     TO_PAY_AMT	STMT_DUE_DTE        	    NOT_DUE_AMT	    BALANCE_AMT	MSG1_NME                                	MSG2_NME                                	SCAN_LINE_NME                                     	LW_FAX_NBR                                        	LW_EMAIL_ADR                                                                                                                                          	     CREATED_BY	CREATION_DATE       	LAST_UPDATED_BY	LAST_UPDATED_DATE   	LAST_UPDATE_LOGIN	CUST_EMAIL_ADR
---------------	------------------	--------------------	--------------------	---------------	---	---------------	---------------	---------------	---------------	------------------------------	-------------------------	------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------	-----	------------	------------------------------------------------------------	------------------------------	---------------	---------------	---------------	--------------------	---------------	---------------	----------------------------------------	----------------------------------------	--------------------------------------------------	--------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------	---------------	--------------------	---------------	--------------------	-----------------	------------------------------------------------------------------------------------------------------------------------------------------------------
        8505111	              3000	           130867641	06-MAR-2020 12:31:33	USD            	En 	              0	              1	              0	              2	RC                            	                  4719795	2002567196                    	JACOB BOYD                                                                                                                                                                                                                                                                                                                                                              	7300 Gary Street                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	Springfield                                                 	VA   	22150       	United States                                               	1-800-453-9775                	         199.99	              0	         199.99	01-APR-2020 23:59:59	              0	         199.99	                                        	                                        	1111120025671960000199990000000000                	(615) 251-3914                                    	CustomerAccounts@LifeWay.com                                                                                                                          	          32418	06-MAR-2020 12:31:33	          32418	06-MAR-2020 12:31:33	        142962125	

Elapsed: 00:00:00.51
apps@DEV
SQL> select * from apps.lwx_ar_stmt_lines where stmt_hdr_id = 8505111;

   STMT_LINE_ID	    STMT_HDR_ID	  STMT_LINE_NBR	I	RE	CUSTOMER_TRX_ID	CASH_RECEIPT_ID	PAYMENT_SCHEDULE_ID	       PAGE_CNT	       LINE_CNT	LOGO_CDE                      	DOC_TITLE_NME                           	REP_MSG_NME                                                 	BILL_TO_CUST_NBR              	BILL_TO_CUST_NME                                                                                                                                                                                                                                                                                                                                                        	BILL_TO_LINE_1_ADR                                                                                                                                                                                                                              	BILL_TO_LINE_2_ADR                                                                                                                                                                                                                              	BILL_TO_LINE_3_ADR                                                                                                                                                                                                                              	BILL_TO_LINE_4_ADR                                                                                                                                                                                                                              	BILL_TO_CITY_NME                                            	BILL_	BILL_TO_POST	BILL_TO_CNTRY_NME                                           	SHIP_TO_CUST_NBR              	SHIP_TO_CUST_NME                                                                                                                                                                                                                                                                                                                                                        	SHIP_TO_LINE_1_ADR                                                                                                                                                                                                                              	SHIP_TO_LINE_2_ADR                                                                                                                                                                                                                              	SHIP_TO_LINE_3_ADR                                                                                                                                                                                                                              	SHIP_TO_LINE_4_ADR                                                                                                                                                                                                                              	SHIP_TO_CITY_NME                                            	SHIP_	SHIP_TO_POST	SHIP_TO_CNTRY_NME                                           	S	TRANS_DTE           	TRANS_NBR                     	DOC_TYPE_NME                  	SLS_CHNL_NME                  	CUST_REF_NME                  	F	P	DUE_DTE             	DOC_REF_NME         	       ORIG_AMT	    OUTSTND_AMT	TERM_MSG1_NME                                                                                       	TERM_MSG2_NME                                                                                       	CUST_CONT_NME                                                                                       	CUST_CONT_PHONE_NBR                               	ORDER_DTE           	SHIP_METH_NME                                                                                       	  SUB_TOTAL_AMT	  SHIP_HNDL_AMT	        TAX_AMT	   PMT_USED_AMT	  TOTAL_DUE_AMT	MKT_MSG1_NME                                      	MKT_MSG2_NME                                      	MKT_MSG3_NME                                      	MKT_MSG4_NME                                      	     CREATED_BY	CREATION_DATE       	LAST_UPDATED_BY	LAST_UPDATE_DATE    	LAST_UPDATE_LOGIN	PURCHASE_ORDER                                    	COMMENTS
---------------	---------------	---------------	-	--	---------------	---------------	-------------------	---------------	---------------	------------------------------	----------------------------------------	------------------------------------------------------------	------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------	-----	------------	------------------------------------------------------------	------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------	-----	------------	------------------------------------------------------------	-	--------------------	------------------------------	------------------------------	------------------------------	------------------------------	-	-	--------------------	--------------------	---------------	---------------	----------------------------------------------------------------------------------------------------	----------------------------------------------------------------------------------------------------	----------------------------------------------------------------------------------------------------	--------------------------------------------------	--------------------	----------------------------------------------------------------------------------------------------	---------------	---------------	---------------	---------------	---------------	--------------------------------------------------	--------------------------------------------------	--------------------------------------------------	--------------------------------------------------	---------------	--------------------	---------------	--------------------	-----------------	--------------------------------------------------	
       41004469	        8505111	              1	Y	F3	       27880971	               	           37841087	               	               	RC                            	                                        	                                                            	                              	                                                                                                                                                                                                                                                                                                                                                                        	                                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	                                                            	     	            	                                                            	                              	                                                                                                                                                                                                                                                                                                                                                                        	                                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	                                                            	     	            	                                                            	N	04-FEB-2020 00:00:00	28619289(15347856)            	Invoice                       	SG                            	24B1-774F-0957                	 	 	04-FEB-2020 00:00:00	28619289(15347856)  	         199.99	         199.99	                                                                                                    	                                                                                                    	                                                                                                    	                                                  	                    	                                                                                                    	         199.99	              0	              0	              0	         199.99	                                                  	                                                  	                                                  	                                                  	          32418	06-MAR-2020 12:31:33	          32418	06-MAR-2020 12:31:33	        142962125	24B1-774F-0957                                    	

Elapsed: 00:00:00.73
apps@DEV
SQL> select /* nvl(sum(sl.outstnd_amt),0) */ sl.outstnd_amt debit_amt
from lwx_ar_stmt_lines sl,
ra_customer_trx_all trx
where sl.stmt_hdr_id = 8505111
and sl.rec_type_cde = 'F3'
and sl.outstnd_amt > 0
and sl.customer_trx_id = trx.customer_trx_id(+)
and trunc(greatest(sl.due_dte, nvl(trx.creation_date, sl.due_dte))) 
      < to_date('06-feb-2020','dd-mon-yyyy') -- - 30
and (case trx.attribute5 
       when 'ET' then lwx_ar_query.get_wo_gift_card_receipt(sl.payment_schedule_id)
       when 'WO' then lwx_ar_query.get_wo_gift_card_receipt(sl.payment_schedule_id)
       when 'FC' then lwx_ar_query.get_wo_gift_card_receipt(sl.payment_schedule_id)
       else null
     end ) is null
and (   lwx_ar_invo_stmt_print.get_prepay(sl.payment_schedule_id,'N','Y') is null
     or exists (
       select 1
       from lwx_ar_stmt_lines sl2
       where sl2.stmt_hdr_id != 8505110
       and sl2.rec_type_cde = 'F3'
       and sl2.customer_trx_id = sl.customer_trx_id
     )
    )

/
 25  
      DEBIT_AMT
---------------
         199.99

Elapsed: 00:00:00.20
apps@DEV
SQL> select /* nvl(sum(sl.outstnd_amt),0) */ sl.outstnd_amt debit_amt
from lwx_ar_stmt_lines sl,
ra_customer_trx_all trx
where sl.stmt_hdr_id = 8505111
and sl.rec_type_cde = 'F3'
and sl.outstnd_amt > 0
and sl.customer_trx_id = trx.customer_trx_id(+)
and trunc(greatest(sl.due_dte, nvl(trx.creation_date, sl.due_dte))) 
      < to_date('06-mar-2020','dd-mon-yyyy') - 30
and (case trx.attribute5 
       when 'ET' then lwx_ar_query.get_wo_gift_card_receipt(sl.payment_schedule_id)
       when 'WO' then lwx_ar_query.get_wo_gift_card_receipt(sl.payment_schedule_id)
       when 'FC' then lwx_ar_query.get_wo_gift_card_receipt(sl.payment_schedule_id)
       else null
     end ) is null
and (   lwx_ar_invo_stmt_print.get_prepay(sl.payment_schedule_id,'N','Y') is null
     or exists (
       select 1
       from lwx_ar_stmt_lines sl2
       where sl2.stmt_hdr_id != 8505110
       and sl2.rec_type_cde = 'F3'
       and sl2.customer_trx_id = sl.customer_trx_id
     )
    );


      DEBIT_AMT
---------------
         199.99

Elapsed: 00:00:00.13
apps@DEV
SQL> disco
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP and Data Mining options
apps@DEV
SQL> @connect apps@dev
Enter password: Connected.
Logged in at: Mon 09-mar-2020 12:31:08 pm

apps@DEV
SQL> select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
           terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , 
      FROM AR_LOOKUPS         l_cat,
           FND_TERRITORIES_VL terr,
           FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
     WHERE addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
       AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
       AND loc.COUNTRY = terr.TERRITORY_CODE(+)
       AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
       ORDER BY decode(csu.site_use_code,'STMTS',1,'BILL_TO',2,3)
) where rownum < 31;

      FROM AR_LOOKUPS         l_cat,
      *
ERROR at line 16:
ORA-00936: missing expression


Elapsed: 00:00:00.23
apps@DEV
SQL> l
  1  select * from (
  2      SELECT loc.ADDRESS1,
  3             loc.ADDRESS2,
  4             loc.ADDRESS3,
  5             loc.ADDRESS4,
  6             loc.CITY,
  7             substr(loc.STATE,1,2),
  8             substr(loc.POSTAL_CODE,1,12),
  9             terr.TERRITORY_SHORT_NAME,
 10             --
 11             nvl(loc_assign.location_id,0) good_geocode
 12  	   --
 13  	   , addr.cust_account_id
 14  	   , party_site.party_id
 15  	   ,
 16        FROM AR_LOOKUPS         l_cat,
 17             FND_TERRITORIES_VL terr,
 18             FND_LANGUAGES_VL   lang,
 19             HZ_CUST_ACCT_SITES addr,
 20             HZ_PARTY_SITES     party_site,
 21             HZ_CUST_SITE_USES  csu,
 22             HZ_LOCATIONS       loc,
 23             HZ_LOC_ASSIGNMENTS loc_assign
 24  	   --
 25  	   , hz_cust_accounts hca
 26       WHERE addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
 27         AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
 28         AND loc.COUNTRY = terr.TERRITORY_CODE(+)
 29         AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
 30         AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
 31         AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
 32         AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
 33         AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
 34         AND loc.LOCATION_ID = party_site.LOCATION_ID
 35         AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
 36         -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
 37         and loc_assign.location_id is null
 38         and hca.cust_account_id = addr.cust_account_id
 39         and hca.party_id = party_site.party_id
 40  --
 41  -- The following two predicates are bound to input variables for the original program
 42  -- cursor:
 43  --       AND addr.cust_account_id = cn_cust_id
 44  --       AND party_site.PARTY_ID = cn_party_id
 45         ORDER BY decode(csu.site_use_code,'STMTS',1,'BILL_TO',2,3)
 46* ) where rownum < 31
apps@DEV
SQL> select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
           terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM AR_LOOKUPS         l_cat,
           FND_TERRITORIES_VL terr,
           FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
     WHERE addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
       AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
       AND loc.COUNTRY = terr.TERRITORY_CODE(+)
       AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
       ORDER BY decode(csu.site_use_code,'STMTS',1,'BILL_TO',2,3)
       ) where rownum < 31;


no rows selected

Elapsed: 00:00:10.10
apps@DEV
SQL> select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
           terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM AR_LOOKUPS         l_cat,
           FND_TERRITORIES_VL terr,
           FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
     WHERE addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
       AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
       AND loc.COUNTRY = terr.TERRITORY_CODE(+)
       AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       -- and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
       ORDER BY decode(csu.site_use_code,'STMTS',1,'BILL_TO',2,3)
       ) where rownum < 51;


no rows selected

Elapsed: 00:00:07.06
apps@DEV
SQL> select count(*) from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
           terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
--! 	   , addr.cust_account_id
--! 	   , party_site.party_id
--! 	   , hca.account_number customer_number
      FROM AR_LOOKUPS         l_cat,
           FND_TERRITORIES_VL terr,
           FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
--! 	   , hz_cust_accounts hca
     WHERE addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
       AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
       AND loc.COUNTRY = terr.TERRITORY_CODE(+)
       AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       -- and loc_assign.location_id is null
--!        and hca.cust_account_id = addr.cust_account_id
--!        and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
       ORDER BY decode(csu.site_use_code,'STMTS',1,'BILL_TO',2,3)
) ;


       COUNT(*)
---------------
              0

Elapsed: 00:00:04.16
apps@DEV
SQL> begin lwx_fnd_query.set_org(102); end;
  2  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
apps@DEV
SQL> select count(*) from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
           terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
--! 	   , addr.cust_account_id
--! 	   , party_site.party_id
--! 	   , hca.account_number customer_number
      FROM AR_LOOKUPS         l_cat,
           FND_TERRITORIES_VL terr,
           FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
--! 	   , hz_cust_accounts hca
     WHERE addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
       AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
       AND loc.COUNTRY = terr.TERRITORY_CODE(+)
       AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       -- and loc_assign.location_id is null
--!        and hca.cust_account_id = addr.cust_account_id
--!        and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
       ORDER BY decode(csu.site_use_code,'STMTS',1,'BILL_TO',2,3)
) ;

  C-c C-c

  C-c C-c  C-c C-\
Process SQL interrupt


SQL*Plus: Release 10.1.0.5.0 - Production on Mon Mar 9 12:51:24 2020

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP and Data Mining options

Logged in at: Mon 09-mar-2020 12:51:25 pm

apps@DEV
SQL> begin lwx_fnd_query.set_org(102); end;
  2  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
apps@DEV
SQL> select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
           terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM AR_LOOKUPS         l_cat,
           FND_TERRITORIES_VL terr,
           FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
     WHERE addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
       AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
       AND loc.COUNTRY = terr.TERRITORY_CODE(+)
       AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
       ORDER BY decode(csu.site_use_code,'STMTS',1,'BILL_TO',2,3)
) where rownum < 31;

  C-c C-c  C-c C-\
Process SQL interrupt


SQL*Plus: Release 10.1.0.5.0 - Production on Mon Mar 9 13:05:14 2020

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP and Data Mining options

Logged in at: Mon 09-mar-2020 01:05:16 pm


Session altered.

RUNNING THE LWX_FND_QUERY.SET_ORG(102)!!!!

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
apps@DEV
SQL> select count(*) from plan_Table where statement_id='x1';

       COUNT(*)
---------------
             62

Elapsed: 00:00:00.15
apps@DEV
SQL> delete plan_table where statement_id='x1';

62 rows deleted.

Elapsed: 00:00:00.30
apps@DEV
SQL> commit; 

Commit complete.

Elapsed: 00:00:00.08
apps@DEV
SQL> explain plan set statement_id='x1' for
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
--            terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM AR_LOOKUPS         l_cat,
--           FND_TERRITORIES_VL terr,
--            FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
     WHERE addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
       AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
--        AND loc.COUNTRY = terr.TERRITORY_CODE(+)
--        AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
;


Explained.

Elapsed: 00:00:01.86
apps@DEV
SQL> @exp x1

    	 par	                                                                                                                                                      	   posi-	            	                             	               	                    	 prtn	prtn           	prtn
  id	  id	OPERATION                                                                                                                                             	    tion	OPTIMIZER   	OTHER_TAG                    	OBJECT_NODE    	DISTRIBUTION        	   id	start          	stop
----	----	------------------------------------------------------------------------------------------------------------------------------------------------------	--------	------------	-----------------------------	---------------	--------------------	-----	---------------	---------------
   0	    	SELECT STATEMENT (cost=87675 card=1 bytes=195)                                                                                                        	   87675	ALL_ROWS    	                             	               	                    	     	               	
   1	   0	 FILTER                                                                                                                                               	       1	            	                             	               	                    	     	               	
   2	   1	  NESTED LOOPS (OUTER) (cost=87675 card=1 bytes=195)                                                                                                  	       1	            	                             	               	                    	     	               	
   3	   2	   NESTED LOOPS (cost=87646 card=1 bytes=193)                                                                                                         	       1	            	                             	               	                    	     	               	
   4	   3	    NESTED LOOPS (cost=87644 card=1 bytes=136)                                                                                                        	       1	            	                             	               	                    	     	               	
   5	   4	     NESTED LOOPS (OUTER) (cost=87641 card=1 bytes=116)                                                                                               	       1	            	                             	               	                    	     	               	
   6	   5	      HASH JOIN (cost=87640 card=1 bytes=80)                                                                                                          	       1	            	                             	               	                    	     	               	
   7	   6	       TABLE ACCESS (FULL) of AR.HZ_CUST_ACCT_SITES_ALL (cost=23126 card=4287680 bytes=167219520)                                                     	       1	ANALYZED    	                             	               	                    	     	               	
   8	   6	       HASH JOIN (cost=51429 card=4245971 bytes=174084811)                                                                                            	       2	            	                             	               	                    	     	               	
   9	   8	        TABLE ACCESS (FULL) of AR.HZ_CUST_ACCOUNTS (cost=21899 card=2924128 bytes=67254944)                                                           	       1	ANALYZED    	                             	               	                    	     	               	
  10	   8	        TABLE ACCESS (FULL) of AR.HZ_PARTY_SITES (cost=22739 card=4244804 bytes=76406472)                                                             	       2	ANALYZED    	                             	               	                    	     	               	
  11	   5	      INDEX (UNIQUE SCAN) of APPLSYS.FND_LOOKUP_VALUES_U1 (cost=1 card=1 bytes=36)                                                                    	       2	ANALYZED    	                             	               	                    	     	               	
  12	   4	     TABLE ACCESS (BY INDEX ROWID) of AR.HZ_CUST_SITE_USES_ALL (cost=3 card=1 bytes=20)                                                               	       2	ANALYZED    	                             	               	                    	     	               	
  13	  12	      INDEX (RANGE SCAN) of AR.IDX$$_2AD90002 (cost=2 card=2)                                                                                         	       1	ANALYZED    	                             	               	                    	     	               	
  14	   3	    TABLE ACCESS (BY INDEX ROWID) of AR.HZ_LOCATIONS (cost=2 card=1 bytes=57)                                                                         	       2	ANALYZED    	                             	               	                    	     	               	
  15	  14	     INDEX (UNIQUE SCAN) of AR.HZ_LOCATIONS_U1 (cost=1 card=1)                                                                                        	       1	ANALYZED    	                             	               	                    	     	               	
  16	   2	   VIEW of APPS.ZX_LOC_ASSIGNMENTS_V (cost=29 card=1 bytes=2)                                                                                         	       2	            	                             	               	                    	     	               	
  17	  16	    SORT (UNIQUE) (cost=29 card=2 bytes=275)                                                                                                          	       1	            	                             	               	                    	     	               	
  18	  17	     UNION ALL PUSHED PREDICATE                                                                                                                       	       1	            	                             	               	                    	     	               	
  19	  18	      NESTED LOOPS                                                                                                                                    	       1	            	                             	               	                    	     	               	
  20	  19	       NESTED LOOPS (cost=12 card=1 bytes=151)                                                                                                        	       1	            	                             	               	                    	     	               	
  21	  20	        MERGE JOIN (CARTESIAN) (cost=9 card=1 bytes=141)                                                                                              	       1	            	                             	               	                    	     	               	
  22	  21	         NESTED LOOPS (cost=6 card=1 bytes=129)                                                                                                       	       1	            	                             	               	                    	     	               	
  23	  22	          NESTED LOOPS (cost=5 card=1 bytes=111)                                                                                                      	       1	            	                             	               	                    	     	               	
  24	  23	           TABLE ACCESS (BY INDEX ROWID) of AR.HZ_GEO_NAME_REFERENCE_LOG (cost=3 card=1 bytes=29)                                                     	       1	ANALYZED    	                             	               	                    	     	               	
  25	  24	            INDEX (UNIQUE SCAN) of AR.HZ_GEO_NAME_REFERENCE_LOG_U1 (cost=2 card=1)                                                                    	       1	ANALYZED    	                             	               	                    	     	               	
  26	  23	           TABLE ACCESS (BY INDEX ROWID) of AR.HZ_LOCATIONS (cost=2 card=1 bytes=82)                                                                  	       2	ANALYZED    	                             	               	                    	     	               	
  27	  26	            INDEX (UNIQUE SCAN) of AR.HZ_LOCATIONS_U1 (cost=1 card=1)                                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  28	  22	          INDEX (RANGE SCAN) of AR.HZ_GEO_STRUCT_MAP_U2 (cost=1 card=1 bytes=18)                                                                      	       2	ANALYZED    	                             	               	                    	     	               	
  29	  21	         BUFFER (SORT) (cost=8 card=1 bytes=12)                                                                                                       	       2	            	                             	               	                    	     	               	
  30	  29	          TABLE ACCESS (BY INDEX ROWID) of AR.HZ_PARTY_SITES (cost=3 card=1 bytes=12)                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  31	  30	           INDEX (RANGE SCAN) of AR.HZ_PARTY_SITES_N2 (cost=2 card=1)                                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  32	  20	        INDEX (RANGE SCAN) of AR.HZ_CUST_ACCT_SITES_N1 (cost=2 card=1)                                                                                	       2	ANALYZED    	                             	               	                    	     	               	
  33	  19	       TABLE ACCESS (BY INDEX ROWID) of AR.HZ_CUST_ACCT_SITES_ALL (cost=3 card=1 bytes=10)                                                            	       2	ANALYZED    	                             	               	                    	     	               	
  34	  18	      NESTED LOOPS (SEMI) (cost=15 card=1 bytes=124)                                                                                                  	       2	            	                             	               	                    	     	               	
  35	  34	       NESTED LOOPS (cost=10 card=1 bytes=122)                                                                                                        	       1	            	                             	               	                    	     	               	
  36	  35	        MERGE JOIN (CARTESIAN) (cost=7 card=1 bytes=112)                                                                                              	       1	            	                             	               	                    	     	               	
  37	  36	         NESTED LOOPS (ANTI) (cost=4 card=1 bytes=100)                                                                                                	       1	            	                             	               	                    	     	               	
  38	  37	          TABLE ACCESS (BY INDEX ROWID) of AR.HZ_LOCATIONS (cost=3 card=1 bytes=82)                                                                   	       1	ANALYZED    	                             	               	                    	     	               	
  39	  38	           INDEX (UNIQUE SCAN) of AR.HZ_LOCATIONS_U1 (cost=2 card=1)                                                                                  	       1	ANALYZED    	                             	               	                    	     	               	
  40	  37	          INDEX (RANGE SCAN) of AR.HZ_GEO_STRUCT_MAP_U2 (cost=1 card=1 bytes=18)                                                                      	       2	ANALYZED    	                             	               	                    	     	               	
  41	  36	         BUFFER (SORT) (cost=6 card=1 bytes=12)                                                                                                       	       2	            	                             	               	                    	     	               	
  42	  41	          TABLE ACCESS (BY INDEX ROWID) of AR.HZ_PARTY_SITES (cost=3 card=1 bytes=12)                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  43	  42	           INDEX (RANGE SCAN) of AR.HZ_PARTY_SITES_N2 (cost=2 card=1)                                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  44	  35	        TABLE ACCESS (BY INDEX ROWID) of AR.HZ_CUST_ACCT_SITES_ALL (cost=3 card=1 bytes=10)                                                           	       2	ANALYZED    	                             	               	                    	     	               	
  45	  44	         INDEX (RANGE SCAN) of AR.HZ_CUST_ACCT_SITES_N1 (cost=2 card=1)                                                                               	       1	ANALYZED    	                             	               	                    	     	               	
  46	  34	       VIEW PUSHED PREDICATE of SYS.VW_DTP_CF265671 (cost=5 card=331 bytes=662)                                                                       	       2	            	                             	               	                    	     	               	
  47	  46	        INDEX (RANGE SCAN) of AR.HZ_GEOGRAPHIES_N11 (cost=5 card=332 bytes=5312)                                                                      	       1	ANALYZED    	                             	               	                    	     	               	

48 rows selected.

Elapsed: 00:00:00.98

no rows selected

Elapsed: 00:00:00.15

    	               	access
  id	OBJECT_NODE    	predicates
----	---------------	-------------------------------------------------------------------------------------
   6	               	"PARTY_SITE_ID"="PARTY_SITE"."PARTY_SITE_ID" AND "HCA"."CUST_ACCOUNT_ID"="CUST_ACCOUN
    	               	T_ID"

   8	               	"HCA"."PARTY_ID"="PARTY_SITE"."PARTY_ID"
  11	               	"LV"."LOOKUP_TYPE"(+)='ADDRESS_CATEGORY' AND "LV"."VIEW_APPLICATION_ID"(+)=222 AND "C
    	               	USTOMER_CATEGORY_CODE"="LV"."LOOKUP_CODE"(+) AND "LV"."SECURITY_GROUP_ID"(+)=0 AND "L
    	               	V"."LANGUAGE"(+)=USERENV('LANG')

  13	               	"CUST_ACCT_SITE_ID"="CUST_ACCT_SITE_ID"
  15	               	"LOC"."LOCATION_ID"="PARTY_SITE"."LOCATION_ID"
  25	               	"LOG"."LOCATION_ID"="LOC"."LOCATION_ID" AND "LOG"."LOCATION_TABLE_NAME"='HZ_LOCATIONS
    	               	' AND "LOG"."USAGE_CODE"='TAX'

  27	               	"HZLOC"."LOCATION_ID"="LOC"."LOCATION_ID"
  28	               	"HZLOC"."COUNTRY"="MAP"."COUNTRY_CODE" AND "MAP"."LOC_TBL_NAME"='HZ_LOCATIONS'
  31	               	"P_SITE"."LOCATION_ID"="LOC"."LOCATION_ID"
  32	               	"ACCT_SITE"."PARTY_SITE_ID"="P_SITE"."PARTY_SITE_ID"
  39	               	"HZLOC"."LOCATION_ID"="LOC"."LOCATION_ID"
  40	               	"MAP"."COUNTRY_CODE"="HZLOC"."COUNTRY" AND "MAP"."LOC_TBL_NAME"='HZ_LOCATIONS'
  43	               	"P_SITE"."LOCATION_ID"="LOC"."LOCATION_ID"
  45	               	"ACCT_SITE"."PARTY_SITE_ID"="P_SITE"."PARTY_SITE_ID"
  47	               	"G"."COUNTRY_CODE"="HZLOC"."COUNTRY" AND "G"."GEOGRAPHY_TYPE"='COUNTRY'

15 rows selected.

Elapsed: 00:00:00.11

    	               	filter
  id	OBJECT_NODE    	predicates
----	---------------	-------------------------------------------------------------------------------------
   1	               	"LOC_ASSIGN"."LOCATION_ID" IS NULL
   7	               	"ORG_ID"=TO_NUMBER(SYS_CONTEXT('multi_org2','current_org_id'))
  12	               	"PRIMARY_FLAG"='Y' AND ("SITE_USE_CODE"='BILL_TO' OR "SITE_USE_CODE"='STMTS') AND "OR
    	               	G_ID"=TO_NUMBER(SYS_CONTEXT('multi_org2','current_org_id'))

  24	               	"LOG"."MAP_STATUS"='S'

Elapsed: 00:00:00.11
apps@DEV
SQL> rollback;

Rollback complete.

Elapsed: 00:00:00.07
apps@DEV
SQL> explain plan set statement_id='x2' for 
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
--            terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM
--       AR_LOOKUPS         l_cat,
--           FND_TERRITORIES_VL terr,
--            FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
     WHERE
--          addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
           1=1
--        AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
--
--        AND loc.COUNTRY = terr.TERRITORY_CODE(+)
--        AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
;


Explained.

Elapsed: 00:00:00.60
apps@DEV
SQL> @exp x2

    	 par	                                                                                                                                                      	   posi-	            	                             	               	                    	 prtn	prtn           	prtn
  id	  id	OPERATION                                                                                                                                             	    tion	OPTIMIZER   	OTHER_TAG                    	OBJECT_NODE    	DISTRIBUTION        	   id	start          	stop
----	----	------------------------------------------------------------------------------------------------------------------------------------------------------	--------	------------	-----------------------------	---------------	--------------------	-----	---------------	---------------
   0	    	SELECT STATEMENT (cost=85394 card=1 bytes=142)                                                                                                        	   85394	ALL_ROWS    	                             	               	                    	     	               	
   1	   0	 FILTER                                                                                                                                               	       1	            	                             	               	                    	     	               	
   2	   1	  NESTED LOOPS (OUTER) (cost=85394 card=1 bytes=142)                                                                                                  	       1	            	                             	               	                    	     	               	
   3	   2	   NESTED LOOPS (cost=85365 card=1 bytes=140)                                                                                                         	       1	            	                             	               	                    	     	               	
   4	   3	    NESTED LOOPS (cost=85363 card=1 bytes=83)                                                                                                         	       1	            	                             	               	                    	     	               	
   5	   4	     HASH JOIN (cost=85360 card=1 bytes=63)                                                                                                           	       1	            	                             	               	                    	     	               	
   6	   5	      TABLE ACCESS (FULL) of AR.HZ_CUST_ACCOUNTS (cost=21899 card=2924128 bytes=67254944)                                                             	       1	ANALYZED    	                             	               	                    	     	               	
   7	   5	      HASH JOIN (cost=53928 card=4244832 bytes=169793280)                                                                                             	       2	            	                             	               	                    	     	               	
   8	   7	       TABLE ACCESS (FULL) of AR.HZ_PARTY_SITES (cost=22739 card=4244804 bytes=76406472)                                                              	       1	ANALYZED    	                             	               	                    	     	               	
   9	   7	       TABLE ACCESS (FULL) of AR.HZ_CUST_ACCT_SITES_ALL (cost=23114 card=4287680 bytes=94328960)                                                      	       2	ANALYZED    	                             	               	                    	     	               	
  10	   4	     TABLE ACCESS (BY INDEX ROWID) of AR.HZ_CUST_SITE_USES_ALL (cost=3 card=1 bytes=20)                                                               	       2	ANALYZED    	                             	               	                    	     	               	
  11	  10	      INDEX (RANGE SCAN) of AR.IDX$$_2AD90002 (cost=2 card=2)                                                                                         	       1	ANALYZED    	                             	               	                    	     	               	
  12	   3	    TABLE ACCESS (BY INDEX ROWID) of AR.HZ_LOCATIONS (cost=2 card=1 bytes=57)                                                                         	       2	ANALYZED    	                             	               	                    	     	               	
  13	  12	     INDEX (UNIQUE SCAN) of AR.HZ_LOCATIONS_U1 (cost=1 card=1)                                                                                        	       1	ANALYZED    	                             	               	                    	     	               	
  14	   2	   VIEW of APPS.ZX_LOC_ASSIGNMENTS_V (cost=29 card=1 bytes=2)                                                                                         	       2	            	                             	               	                    	     	               	
  15	  14	    SORT (UNIQUE) (cost=29 card=2 bytes=275)                                                                                                          	       1	            	                             	               	                    	     	               	
  16	  15	     UNION ALL PUSHED PREDICATE                                                                                                                       	       1	            	                             	               	                    	     	               	
  17	  16	      NESTED LOOPS                                                                                                                                    	       1	            	                             	               	                    	     	               	
  18	  17	       NESTED LOOPS (cost=12 card=1 bytes=151)                                                                                                        	       1	            	                             	               	                    	     	               	
  19	  18	        MERGE JOIN (CARTESIAN) (cost=9 card=1 bytes=141)                                                                                              	       1	            	                             	               	                    	     	               	
  20	  19	         NESTED LOOPS (cost=6 card=1 bytes=129)                                                                                                       	       1	            	                             	               	                    	     	               	
  21	  20	          NESTED LOOPS (cost=5 card=1 bytes=111)                                                                                                      	       1	            	                             	               	                    	     	               	
  22	  21	           TABLE ACCESS (BY INDEX ROWID) of AR.HZ_GEO_NAME_REFERENCE_LOG (cost=3 card=1 bytes=29)                                                     	       1	ANALYZED    	                             	               	                    	     	               	
  23	  22	            INDEX (UNIQUE SCAN) of AR.HZ_GEO_NAME_REFERENCE_LOG_U1 (cost=2 card=1)                                                                    	       1	ANALYZED    	                             	               	                    	     	               	
  24	  21	           TABLE ACCESS (BY INDEX ROWID) of AR.HZ_LOCATIONS (cost=2 card=1 bytes=82)                                                                  	       2	ANALYZED    	                             	               	                    	     	               	
  25	  24	            INDEX (UNIQUE SCAN) of AR.HZ_LOCATIONS_U1 (cost=1 card=1)                                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  26	  20	          INDEX (RANGE SCAN) of AR.HZ_GEO_STRUCT_MAP_U2 (cost=1 card=1 bytes=18)                                                                      	       2	ANALYZED    	                             	               	                    	     	               	
  27	  19	         BUFFER (SORT) (cost=8 card=1 bytes=12)                                                                                                       	       2	            	                             	               	                    	     	               	
  28	  27	          TABLE ACCESS (BY INDEX ROWID) of AR.HZ_PARTY_SITES (cost=3 card=1 bytes=12)                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  29	  28	           INDEX (RANGE SCAN) of AR.HZ_PARTY_SITES_N2 (cost=2 card=1)                                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  30	  18	        INDEX (RANGE SCAN) of AR.HZ_CUST_ACCT_SITES_N1 (cost=2 card=1)                                                                                	       2	ANALYZED    	                             	               	                    	     	               	
  31	  17	       TABLE ACCESS (BY INDEX ROWID) of AR.HZ_CUST_ACCT_SITES_ALL (cost=3 card=1 bytes=10)                                                            	       2	ANALYZED    	                             	               	                    	     	               	
  32	  16	      NESTED LOOPS (SEMI) (cost=15 card=1 bytes=124)                                                                                                  	       2	            	                             	               	                    	     	               	
  33	  32	       NESTED LOOPS (cost=10 card=1 bytes=122)                                                                                                        	       1	            	                             	               	                    	     	               	
  34	  33	        MERGE JOIN (CARTESIAN) (cost=7 card=1 bytes=112)                                                                                              	       1	            	                             	               	                    	     	               	
  35	  34	         NESTED LOOPS (ANTI) (cost=4 card=1 bytes=100)                                                                                                	       1	            	                             	               	                    	     	               	
  36	  35	          TABLE ACCESS (BY INDEX ROWID) of AR.HZ_LOCATIONS (cost=3 card=1 bytes=82)                                                                   	       1	ANALYZED    	                             	               	                    	     	               	
  37	  36	           INDEX (UNIQUE SCAN) of AR.HZ_LOCATIONS_U1 (cost=2 card=1)                                                                                  	       1	ANALYZED    	                             	               	                    	     	               	
  38	  35	          INDEX (RANGE SCAN) of AR.HZ_GEO_STRUCT_MAP_U2 (cost=1 card=1 bytes=18)                                                                      	       2	ANALYZED    	                             	               	                    	     	               	
  39	  34	         BUFFER (SORT) (cost=6 card=1 bytes=12)                                                                                                       	       2	            	                             	               	                    	     	               	
  40	  39	          TABLE ACCESS (BY INDEX ROWID) of AR.HZ_PARTY_SITES (cost=3 card=1 bytes=12)                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  41	  40	           INDEX (RANGE SCAN) of AR.HZ_PARTY_SITES_N2 (cost=2 card=1)                                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  42	  33	        TABLE ACCESS (BY INDEX ROWID) of AR.HZ_CUST_ACCT_SITES_ALL (cost=3 card=1 bytes=10)                                                           	       2	ANALYZED    	                             	               	                    	     	               	
  43	  42	         INDEX (RANGE SCAN) of AR.HZ_CUST_ACCT_SITES_N1 (cost=2 card=1)                                                                               	       1	ANALYZED    	                             	               	                    	     	               	
  44	  32	       VIEW PUSHED PREDICATE of SYS.VW_DTP_12F1FE52 (cost=5 card=331 bytes=662)                                                                       	       2	            	                             	               	                    	     	               	
  45	  44	        INDEX (RANGE SCAN) of AR.HZ_GEOGRAPHIES_N11 (cost=5 card=332 bytes=5312)                                                                      	       1	ANALYZED    	                             	               	                    	     	               	

46 rows selected.

Elapsed: 00:00:00.99

no rows selected

Elapsed: 00:00:00.12

    	               	access
  id	OBJECT_NODE    	predicates
----	---------------	-------------------------------------------------------------------------------------
   5	               	"HCA"."CUST_ACCOUNT_ID"="CUST_ACCOUNT_ID" AND "HCA"."PARTY_ID"="PARTY_SITE"."PARTY_ID
    	               	"

   7	               	"PARTY_SITE_ID"="PARTY_SITE"."PARTY_SITE_ID"
  11	               	"CUST_ACCT_SITE_ID"="CUST_ACCT_SITE_ID"
  13	               	"LOC"."LOCATION_ID"="PARTY_SITE"."LOCATION_ID"
  23	               	"LOG"."LOCATION_ID"="LOC"."LOCATION_ID" AND "LOG"."LOCATION_TABLE_NAME"='HZ_LOCATIONS
    	               	' AND "LOG"."USAGE_CODE"='TAX'

  25	               	"HZLOC"."LOCATION_ID"="LOC"."LOCATION_ID"
  26	               	"HZLOC"."COUNTRY"="MAP"."COUNTRY_CODE" AND "MAP"."LOC_TBL_NAME"='HZ_LOCATIONS'
  29	               	"P_SITE"."LOCATION_ID"="LOC"."LOCATION_ID"
  30	               	"ACCT_SITE"."PARTY_SITE_ID"="P_SITE"."PARTY_SITE_ID"
  37	               	"HZLOC"."LOCATION_ID"="LOC"."LOCATION_ID"
  38	               	"MAP"."COUNTRY_CODE"="HZLOC"."COUNTRY" AND "MAP"."LOC_TBL_NAME"='HZ_LOCATIONS'
  41	               	"P_SITE"."LOCATION_ID"="LOC"."LOCATION_ID"
  43	               	"ACCT_SITE"."PARTY_SITE_ID"="P_SITE"."PARTY_SITE_ID"
  45	               	"G"."COUNTRY_CODE"="HZLOC"."COUNTRY" AND "G"."GEOGRAPHY_TYPE"='COUNTRY'

14 rows selected.

Elapsed: 00:00:00.15

    	               	filter
  id	OBJECT_NODE    	predicates
----	---------------	-------------------------------------------------------------------------------------
   1	               	"LOC_ASSIGN"."LOCATION_ID" IS NULL
   9	               	"ORG_ID"=TO_NUMBER(SYS_CONTEXT('multi_org2','current_org_id'))
  10	               	"PRIMARY_FLAG"='Y' AND ("SITE_USE_CODE"='BILL_TO' OR "SITE_USE_CODE"='STMTS') AND "OR
    	               	G_ID"=TO_NUMBER(SYS_CONTEXT('multi_org2','current_org_id'))

  22	               	"LOG"."MAP_STATUS"='S'

Elapsed: 00:00:00.15
apps@DEV
SQL> rollback
  2  ;

Rollback complete.

Elapsed: 00:00:00.08
apps@DEV
SQL> set autot on exp stat
apps@DEV
SQL> select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
--            terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM
--       AR_LOOKUPS         l_cat,
--           FND_TERRITORIES_VL terr,
--            FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
     WHERE
--          addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
           1=1
--        AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
--
--        AND loc.COUNTRY = terr.TERRITORY_CODE(+)
--        AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
) where rownum < 31;




ADDRESS1                 	ADDRESS2                 	ADDRESS3                 	ADDRESS4                 	CITY                     	SU	SUBSTR(LOC.P	   GOOD_GEOCODE	CUST_ACCOUNT_ID	       PARTY_ID	CUSTOMER_NUMBER
-------------------------	-------------------------	-------------------------	-------------------------	-------------------------	--	------------	---------------	---------------	---------------	------------------------------
PO Box 1522              	                         	                         	                         	Aibonito                 	PR	00705       	              0	       20298270	       26959862	2001526616
HC 05 BOX 56906          	                         	                         	                         	HATILLO                  	PR	00659       	              0	       15509560	       22868832	2000958035
41 S Chenango St         	                         	                         	                         	Greene                   	NY	13778-1233  	              0	        1779464	        1665454	2000271783
PO Box 264               	                         	                         	                         	Mc Coy                   	CO	80463-0264  	              0	       14133515	       21420077	2000890468
1819 Drury Ln            	                         	                         	                         	Nichols Hills            	OK	73116-5311  	              0	       15665448	       23056780	2001072954
Po box 1543              	                         	                         	                         	Vega Baja                	PR	00694-1543  	              0	       15655669	       23043154	2001064046
1645 Annapolis St.       	San Gerardo              	                         	                         	San Juan                 	PR	00926       	              0	       20411520	       27097051	2001610613
16891 SW 92nd Ct         	                         	                         	                         	Village Of Palmetto Bay  	FL	33157-4514  	              0	        1472576	        1412270	2000207023
Villas del Turey         	41109 Paseo Turey        	                         	                         	Coto Laurel              	PR	00780       	              0	       13944761	       21194963	2000804701
PO BOX 1418              	                         	                         	                         	LAJAS                    	PR	00667       	              0	       15549050	       22916486	2000984420
Estancias de Montesol #9 	                         	                         	                         	Gurabo                   	PR	00778       	              0	       15695667	       23095088	2001099612
PO Box 2814              	                         	                         	                         	Arecibo                  	PR	00613       	              0	       20014933	       26569574	2001404425
7971 Eddingsville Beach R	                         	                         	                         	Edisto Island            	SC	29438-6994  	              0	        2050375	        1878323	2000322747
% Jeff Borton            	8900 SW 168th St         	                         	                         	Village Of Palmetto Bay  	FL	33157-4569  	              0	         723495	         762828	2000057999
% PMB 408                	PO Box 8309              	                         	                         	St John                  	VI	00831-8309  	              0	        9642556	       12415483	2000619749
% Ellen Strohm           	1550 Liberty Ridge Dr Ste	                         	                         	Chesterbrook             	PA	19087-5578  	              0	       14051736	       21326098	2000861590
H59 Box 5472             	                         	                         	                         	Aguada                   	PR	00602       	              0	        6048684	        7398799	2000522477
53 State St              	                         	                         	                         	Oneida                   	NY	13421-2565  	              0	        2387583	        2159466	2000391771
172 Reina Isabel         	La Villa de Torrimar     	                         	                         	Guaynabo                 	PR	00969-3285  	              0	       13942331	       21191294	2000803143
Urb. Los Caobos          	Calle Tabonuco #2851     	                         	                         	Ponce                    	PR	00716       	              0	       16133171	       23404370	2001137679
Rio Hondo I K-19 Rio Boti	                         	                         	                         	Bayamon                  	PR	00961       	              0	       20364892	       27048747	2001583386
7903 W End Dr            	                         	                         	                         	Orchard Beach            	MD	21226-2044  	              0	         390533	         431231	1000781334
428 Camino Las Magas     	Sabanera Del Rio         	                         	                         	Gurabo                   	PR	00778       	              0	       15560996	       22933479	2000991289
P.O. Box 931             	                         	                         	                         	Lares                    	PR	00669       	              0	       20340749	       27017802	2001562170
Po box 2094              	                         	                         	                         	Caguas                   	PR	            	              0	       20324006	       26995561	2001549672
HC01 Box 4458            	                         	                         	                         	Utuado                   	PR	00641       	              0	       12898601	       19157683	2000707781
% Bardin and Marsee Publi	373 Skylane Dr           	                         	                         	Saint Simons Is          	GA	31522-3712  	              0	        2306136	        2091323	2000375155
% 502nd Abw 01-b/hc      	2 Washington Cir         	                         	                         	Randolph A F B           	TX	78150-4557  	              0	       13658924	       20662066	2000733789
156 Baker Dr             	                         	                         	                         	McKnight                 	PA	15237-3601  	              0	         562249	         618332	2000025849
17905 SW 83rd Ct         	                         	                         	                         	Village Of Palmetto Bay  	FL	33157-6123  	              0	        1979214	        1829094	2000313266

30 rows selected.

Elapsed: 00:14:11.54

Execution Plan
----------------------------------------------------------
   0	    	SELECT STATEMENT Optimizer=ALL_ROWS (Cost=85394 Card=1 Bytes=142)                                                       	
   1	   0	  COUNT (STOPKEY)                                                                                                       	
   2	   1	    FILTER                                                                                                              	
   3	   2	      NESTED LOOPS (OUTER) (Cost=85394 Card=1 Bytes=142)                                                                	
   4	   3	        NESTED LOOPS (Cost=85365 Card=1 Bytes=140)                                                                      	
   5	   4	          NESTED LOOPS (Cost=85363 Card=1 Bytes=83)                                                                     	
   6	   5	            HASH JOIN (Cost=85360 Card=1 Bytes=63)                                                                      	
   7	   6	              TABLE ACCESS (FULL) OF 'HZ_CUST_ACCOUNTS' (TABLE) (Cost=21899 Card=2924128 Bytes=67254944)                	
   8	   6	              HASH JOIN (Cost=53928 Card=4244832 Bytes=169793280)                                                       	
   9	   8	                TABLE ACCESS (FULL) OF 'HZ_PARTY_SITES' (TABLE) (Cost=22739 Card=4244804 Bytes=76406472)                	
  10	   8	                TABLE ACCESS (FULL) OF 'HZ_CUST_ACCT_SITES_ALL' (TABLE) (Cost=23114 Card=4287680 Bytes=94328960)        	
  11	   5	            TABLE ACCESS (BY INDEX ROWID) OF 'HZ_CUST_SITE_USES_ALL' (TABLE) (Cost=3 Card=1 Bytes=20)                   	
  12	  11	              INDEX (RANGE SCAN) OF 'IDX$$_2AD90002' (INDEX) (Cost=2 Card=2)                                            	
  13	   4	          TABLE ACCESS (BY INDEX ROWID) OF 'HZ_LOCATIONS' (TABLE) (Cost=2 Card=1 Bytes=57)                              	
  14	  13	            INDEX (UNIQUE SCAN) OF 'HZ_LOCATIONS_U1' (INDEX (UNIQUE)) (Cost=1 Card=1)                                   	
  15	   3	        VIEW OF 'ZX_LOC_ASSIGNMENTS_V' (VIEW) (Cost=29 Card=1 Bytes=2)                                                  	
  16	  15	          SORT (UNIQUE) (Cost=29 Card=2 Bytes=275)                                                                      	
  17	  16	            UNION ALL PUSHED PREDICATE                                                                                  	
  18	  17	              NESTED LOOPS                                                                                              	
  19	  18	                NESTED LOOPS (Cost=12 Card=1 Bytes=151)                                                                 	
  20	  19	                  MERGE JOIN (CARTESIAN) (Cost=9 Card=1 Bytes=141)                                                      	
  21	  20	                    NESTED LOOPS (Cost=6 Card=1 Bytes=129)                                                              	
  22	  21	                      NESTED LOOPS (Cost=5 Card=1 Bytes=111)                                                            	
  23	  22	                        TABLE ACCESS (BY INDEX ROWID) OF 'HZ_GEO_NAME_REFERENCE_LOG' (TABLE) (Cost=3 Card=1 Bytes=29)   	
  24	  23	                          INDEX (UNIQUE SCAN) OF 'HZ_GEO_NAME_REFERENCE_LOG_U1' (INDEX (UNIQUE)) (Cost=2 Card=1)        	
  25	  22	                        TABLE ACCESS (BY INDEX ROWID) OF 'HZ_LOCATIONS' (TABLE) (Cost=2 Card=1 Bytes=82)                	
  26	  25	                          INDEX (UNIQUE SCAN) OF 'HZ_LOCATIONS_U1' (INDEX (UNIQUE)) (Cost=1 Card=1)                     	
  27	  21	                      INDEX (RANGE SCAN) OF 'HZ_GEO_STRUCT_MAP_U2' (INDEX (UNIQUE)) (Cost=1 Card=1 Bytes=18)            	
  28	  20	                    BUFFER (SORT) (Cost=8 Card=1 Bytes=12)                                                              	
  29	  28	                      TABLE ACCESS (BY INDEX ROWID) OF 'HZ_PARTY_SITES' (TABLE) (Cost=3 Card=1 Bytes=12)                	
  30	  29	                        INDEX (RANGE SCAN) OF 'HZ_PARTY_SITES_N2' (INDEX) (Cost=2 Card=1)                               	
  31	  19	                  INDEX (RANGE SCAN) OF 'HZ_CUST_ACCT_SITES_N1' (INDEX) (Cost=2 Card=1)                                 	
  32	  18	                TABLE ACCESS (BY INDEX ROWID) OF 'HZ_CUST_ACCT_SITES_ALL' (TABLE) (Cost=3 Card=1 Bytes=10)              	
  33	  17	              NESTED LOOPS (SEMI) (Cost=15 Card=1 Bytes=124)                                                            	
  34	  33	                NESTED LOOPS (Cost=10 Card=1 Bytes=122)                                                                 	
  35	  34	                  MERGE JOIN (CARTESIAN) (Cost=7 Card=1 Bytes=112)                                                      	
  36	  35	                    NESTED LOOPS (ANTI) (Cost=4 Card=1 Bytes=100)                                                       	
  37	  36	                      TABLE ACCESS (BY INDEX ROWID) OF 'HZ_LOCATIONS' (TABLE) (Cost=3 Card=1 Bytes=82)                  	
  38	  37	                        INDEX (UNIQUE SCAN) OF 'HZ_LOCATIONS_U1' (INDEX (UNIQUE)) (Cost=2 Card=1)                       	
  39	  36	                      INDEX (RANGE SCAN) OF 'HZ_GEO_STRUCT_MAP_U2' (INDEX (UNIQUE)) (Cost=1 Card=1 Bytes=18)            	
  40	  35	                    BUFFER (SORT) (Cost=6 Card=1 Bytes=12)                                                              	
  41	  40	                      TABLE ACCESS (BY INDEX ROWID) OF 'HZ_PARTY_SITES' (TABLE) (Cost=3 Card=1 Bytes=12)                	
  42	  41	                        INDEX (RANGE SCAN) OF 'HZ_PARTY_SITES_N2' (INDEX) (Cost=2 Card=1)                               	
  43	  34	                  TABLE ACCESS (BY INDEX ROWID) OF 'HZ_CUST_ACCT_SITES_ALL' (TABLE) (Cost=3 Card=1 Bytes=10)            	
  44	  43	                    INDEX (RANGE SCAN) OF 'HZ_CUST_ACCT_SITES_N1' (INDEX) (Cost=2 Card=1)                               	
  45	  33	                VIEW PUSHED PREDICATE OF 'VW_DTP_CF265671' (VIEW) (Cost=5 Card=331 Bytes=662)                           	
  46	  45	                  INDEX (RANGE SCAN) OF 'HZ_GEOGRAPHIES_N11' (INDEX) (Cost=5 Card=332 Bytes=5312)                       	




Statistics
----------------------------------------------------------
        524  recursive calls
          5  db block gets
    1679682  consistent gets
     849939  physical reads
       1200  redo size
       2838  bytes sent via SQL*Net to client
        286  bytes received via SQL*Net from client
          3  SQL*Net roundtrips to/from client
      88548  sorts (memory)
          0  sorts (disk)
         30  rows processed

apps@DEV
SQL> apps@DEV
SQL> apps@DEV
SQL> apps@DEV
SQL> rem choosing customer number 2000733789...
apps@DEV
SQL> 
apps@DEV
SQL> disco
SP2-0620: Error while disconnecting
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP and Data Mining options
apps@DEV
SQL> @connect apps@dev
Enter password: Connected.
Logged in at: Mon 09-mar-2020 02:29:57 pm


Session altered.

Elapsed: 00:00:00.07
RUNNING THE LWX_FND_QUERY.SET_ORG(102)!!!!

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
apps@DEV
SQL> disco
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP and Data Mining options
apps@DEV
SQL> @connect apps@dev
Enter password: ERROR:
ORA-01017: invalid username/password; logon denied


apps@DEV
SQL> @connect apps@dev
Enter password: Connected.
Logged in at: Mon 09-mar-2020 03:33:26 pm


Session altered.

Elapsed: 00:00:00.07
RUNNING THE LWX_FND_QUERY.SET_ORG(102)!!!!

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
apps@DEV
SQL> select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
--            terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM
--       AR_LOOKUPS         l_cat,
--           FND_TERRITORIES_VL terr,
--            FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
     WHERE
--          addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
           1=1
--        AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
--
--        AND loc.COUNTRY = terr.TERRITORY_CODE(+)
--        AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
) where rownum < 201


 50  apps@DEV
SQL> set autot on exp stat
ERROR:
ORA-24315: illegal attribute type


SP2-0619: Error while connecting
SP2-0611: Error enabling STATISTICS report
apps@DEV
SQL> set colsep '	'
apps@DEV
SQL> set autotrace off
apps@DEV
SQL> set autotrace on exp stat
ERROR:
ORA-24315: illegal attribute type


SP2-0619: Error while connecting
SP2-0611: Error enabling STATISTICS report
apps@DEV
SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP and Data Mining options

Process SQL finished


SQL*Plus: Release 10.1.0.5.0 - Production on Mon Mar 9 15:35:28 2020

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP and Data Mining options

Logged in at: Mon 09-mar-2020 03:35:29 pm


Session altered.

RUNNING THE LWX_FND_QUERY.SET_ORG(102)!!!!

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
apps@DEV
SQL> set autotrace on exp stat
apps@DEV
SQL> set colsep '	'
apps@DEV
SQL> select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
--            terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM
--       AR_LOOKUPS         l_cat,
--           FND_TERRITORIES_VL terr,
--            FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
     WHERE
--          addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
           1=1
--        AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
--
--        AND loc.COUNTRY = terr.TERRITORY_CODE(+)
--        AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
--
-- The following two predicates are bound to input variables for the original program
-- cursor:
--       AND addr.cust_account_id = cn_cust_id
--       AND party_site.PARTY_ID = cn_party_id
) where rownum < 201

.
 50  apps@DEV
SQL> /
  C-c C-c  C-c C-\
Process SQL interrupt


SQL*Plus: Release 10.1.0.5.0 - Production on Mon Mar 9 15:37:49 2020

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP and Data Mining options

Logged in at: Mon 09-mar-2020 03:37:51 pm


Session altered.

RUNNING THE LWX_FND_QUERY.SET_ORG(102)!!!!

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
apps@DEV
SQL> select count(*) from lwx_ar_stmt_headers;

       COUNT(*)
---------------
         102627

Elapsed: 00:00:00.27
apps@DEV
SQL> explain plan set statement_id='x2' for
select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
--            terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM
--       AR_LOOKUPS         l_cat,
--           FND_TERRITORIES_VL terr,
--            FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
	   , lwx_ar_stmt_headers arsh
     WHERE
--          addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
           1=1
--        AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
--
--        AND loc.COUNTRY = terr.TERRITORY_CODE(+)
--        AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
       and hca.cust_account_id = arsh.send_to_cust_nbr
) where rownum< 201

.
 48  apps@DEV
SQL> /

Explained.

Elapsed: 00:00:00.73
apps@DEV
SQL> @exp x3

no rows selected

Elapsed: 00:00:00.09

no rows selected

Elapsed: 00:00:00.11

no rows selected

Elapsed: 00:00:00.08

no rows selected

Elapsed: 00:00:00.08
apps@DEV
SQL> @exp x2

    	 par	                                                                                                                                                      	   posi-	            	                             	               	                    	 prtn	prtn           	prtn
  id	  id	OPERATION                                                                                                                                             	    tion	OPTIMIZER   	OTHER_TAG                    	OBJECT_NODE    	DISTRIBUTION        	   id	start          	stop
----	----	------------------------------------------------------------------------------------------------------------------------------------------------------	--------	------------	-----------------------------	---------------	--------------------	-----	---------------	---------------
   0	    	SELECT STATEMENT (cost=79613 card=1 bytes=153)                                                                                                        	   79613	ALL_ROWS    	                             	               	                    	     	               	
   1	   0	 COUNT (STOPKEY)                                                                                                                                      	       1	            	                             	               	                    	     	               	
   2	   1	  FILTER                                                                                                                                              	       1	            	                             	               	                    	     	               	
   3	   2	   NESTED LOOPS (OUTER) (cost=79613 card=1 bytes=153)                                                                                                 	       1	            	                             	               	                    	     	               	
   4	   3	    NESTED LOOPS (cost=79584 card=1 bytes=151)                                                                                                        	       1	            	                             	               	                    	     	               	
   5	   4	     NESTED LOOPS (cost=79582 card=1 bytes=94)                                                                                                        	       1	            	                             	               	                    	     	               	
   6	   5	      HASH JOIN (cost=79579 card=1 bytes=74)                                                                                                          	       1	            	                             	               	                    	     	               	
   7	   6	       HASH JOIN (cost=51730 card=224066 bytes=11651432)                                                                                              	       1	            	                             	               	                    	     	               	
   8	   7	        HASH JOIN (cost=25081 card=103413 bytes=3516042)                                                                                              	       1	            	                             	               	                    	     	               	
   9	   8	         INDEX (FAST FULL SCAN) of LWX.LWX_AR_STMT_HEADERS_N1 (cost=85 card=103413 bytes=1137543)                                                     	       1	ANALYZED    	                             	               	                    	     	               	
  10	   8	         TABLE ACCESS (FULL) of AR.HZ_CUST_ACCOUNTS (cost=21899 card=2924128 bytes=67254944)                                                          	       2	ANALYZED    	                             	               	                    	     	               	
  11	   7	        TABLE ACCESS (FULL) of AR.HZ_PARTY_SITES (cost=22739 card=4244804 bytes=76406472)                                                             	       2	ANALYZED    	                             	               	                    	     	               	
  12	   6	       TABLE ACCESS (FULL) of AR.HZ_CUST_ACCT_SITES_ALL (cost=23114 card=4287680 bytes=94328960)                                                      	       2	ANALYZED    	                             	               	                    	     	               	
  13	   5	      TABLE ACCESS (BY INDEX ROWID) of AR.HZ_CUST_SITE_USES_ALL (cost=3 card=1 bytes=20)                                                              	       2	ANALYZED    	                             	               	                    	     	               	
  14	  13	       INDEX (RANGE SCAN) of AR.IDX$$_2AD90002 (cost=2 card=2)                                                                                        	       1	ANALYZED    	                             	               	                    	     	               	
  15	   4	     TABLE ACCESS (BY INDEX ROWID) of AR.HZ_LOCATIONS (cost=2 card=1 bytes=57)                                                                        	       2	ANALYZED    	                             	               	                    	     	               	
  16	  15	      INDEX (UNIQUE SCAN) of AR.HZ_LOCATIONS_U1 (cost=1 card=1)                                                                                       	       1	ANALYZED    	                             	               	                    	     	               	
  17	   3	    VIEW of APPS.ZX_LOC_ASSIGNMENTS_V (cost=29 card=1 bytes=2)                                                                                        	       2	            	                             	               	                    	     	               	
  18	  17	     SORT (UNIQUE) (cost=29 card=2 bytes=275)                                                                                                         	       1	            	                             	               	                    	     	               	
  19	  18	      UNION ALL PUSHED PREDICATE                                                                                                                      	       1	            	                             	               	                    	     	               	
  20	  19	       NESTED LOOPS                                                                                                                                   	       1	            	                             	               	                    	     	               	
  21	  20	        NESTED LOOPS (cost=12 card=1 bytes=151)                                                                                                       	       1	            	                             	               	                    	     	               	
  22	  21	         MERGE JOIN (CARTESIAN) (cost=9 card=1 bytes=141)                                                                                             	       1	            	                             	               	                    	     	               	
  23	  22	          NESTED LOOPS (cost=6 card=1 bytes=129)                                                                                                      	       1	            	                             	               	                    	     	               	
  24	  23	           NESTED LOOPS (cost=5 card=1 bytes=111)                                                                                                     	       1	            	                             	               	                    	     	               	
  25	  24	            TABLE ACCESS (BY INDEX ROWID) of AR.HZ_GEO_NAME_REFERENCE_LOG (cost=3 card=1 bytes=29)                                                    	       1	ANALYZED    	                             	               	                    	     	               	
  26	  25	             INDEX (UNIQUE SCAN) of AR.HZ_GEO_NAME_REFERENCE_LOG_U1 (cost=2 card=1)                                                                   	       1	ANALYZED    	                             	               	                    	     	               	
  27	  24	            TABLE ACCESS (BY INDEX ROWID) of AR.HZ_LOCATIONS (cost=2 card=1 bytes=82)                                                                 	       2	ANALYZED    	                             	               	                    	     	               	
  28	  27	             INDEX (UNIQUE SCAN) of AR.HZ_LOCATIONS_U1 (cost=1 card=1)                                                                                	       1	ANALYZED    	                             	               	                    	     	               	
  29	  23	           INDEX (RANGE SCAN) of AR.HZ_GEO_STRUCT_MAP_U2 (cost=1 card=1 bytes=18)                                                                     	       2	ANALYZED    	                             	               	                    	     	               	
  30	  22	          BUFFER (SORT) (cost=8 card=1 bytes=12)                                                                                                      	       2	            	                             	               	                    	     	               	
  31	  30	           TABLE ACCESS (BY INDEX ROWID) of AR.HZ_PARTY_SITES (cost=3 card=1 bytes=12)                                                                	       1	ANALYZED    	                             	               	                    	     	               	
  32	  31	            INDEX (RANGE SCAN) of AR.HZ_PARTY_SITES_N2 (cost=2 card=1)                                                                                	       1	ANALYZED    	                             	               	                    	     	               	
  33	  21	         INDEX (RANGE SCAN) of AR.HZ_CUST_ACCT_SITES_N1 (cost=2 card=1)                                                                               	       2	ANALYZED    	                             	               	                    	     	               	
  34	  20	        TABLE ACCESS (BY INDEX ROWID) of AR.HZ_CUST_ACCT_SITES_ALL (cost=3 card=1 bytes=10)                                                           	       2	ANALYZED    	                             	               	                    	     	               	
  35	  19	       NESTED LOOPS (SEMI) (cost=15 card=1 bytes=124)                                                                                                 	       2	            	                             	               	                    	     	               	
  36	  35	        NESTED LOOPS (cost=10 card=1 bytes=122)                                                                                                       	       1	            	                             	               	                    	     	               	
  37	  36	         MERGE JOIN (CARTESIAN) (cost=7 card=1 bytes=112)                                                                                             	       1	            	                             	               	                    	     	               	
  38	  37	          NESTED LOOPS (ANTI) (cost=4 card=1 bytes=100)                                                                                               	       1	            	                             	               	                    	     	               	
  39	  38	           TABLE ACCESS (BY INDEX ROWID) of AR.HZ_LOCATIONS (cost=3 card=1 bytes=82)                                                                  	       1	ANALYZED    	                             	               	                    	     	               	
  40	  39	            INDEX (UNIQUE SCAN) of AR.HZ_LOCATIONS_U1 (cost=2 card=1)                                                                                 	       1	ANALYZED    	                             	               	                    	     	               	
  41	  38	           INDEX (RANGE SCAN) of AR.HZ_GEO_STRUCT_MAP_U2 (cost=1 card=1 bytes=18)                                                                     	       2	ANALYZED    	                             	               	                    	     	               	
  42	  37	          BUFFER (SORT) (cost=6 card=1 bytes=12)                                                                                                      	       2	            	                             	               	                    	     	               	
  43	  42	           TABLE ACCESS (BY INDEX ROWID) of AR.HZ_PARTY_SITES (cost=3 card=1 bytes=12)                                                                	       1	ANALYZED    	                             	               	                    	     	               	
  44	  43	            INDEX (RANGE SCAN) of AR.HZ_PARTY_SITES_N2 (cost=2 card=1)                                                                                	       1	ANALYZED    	                             	               	                    	     	               	
  45	  36	         TABLE ACCESS (BY INDEX ROWID) of AR.HZ_CUST_ACCT_SITES_ALL (cost=3 card=1 bytes=10)                                                          	       2	ANALYZED    	                             	               	                    	     	               	
  46	  45	          INDEX (RANGE SCAN) of AR.HZ_CUST_ACCT_SITES_N1 (cost=2 card=1)                                                                              	       1	ANALYZED    	                             	               	                    	     	               	
  47	  35	        VIEW PUSHED PREDICATE of SYS.VW_DTP_CF265671 (cost=5 card=331 bytes=662)                                                                      	       2	            	                             	               	                    	     	               	
  48	  47	         INDEX (RANGE SCAN) of AR.HZ_GEOGRAPHIES_N11 (cost=5 card=332 bytes=5312)                                                                     	       1	ANALYZED    	                             	               	                    	     	               	

49 rows selected.

Elapsed: 00:00:01.03

no rows selected

Elapsed: 00:00:00.15

    	               	access
  id	OBJECT_NODE    	predicates
----	---------------	-------------------------------------------------------------------------------------
   6	               	"PARTY_SITE_ID"="PARTY_SITE"."PARTY_SITE_ID" AND "HCA"."CUST_ACCOUNT_ID"="CUST_ACCOUN
    	               	T_ID"

   7	               	"HCA"."PARTY_ID"="PARTY_SITE"."PARTY_ID"
   8	               	"HCA"."CUST_ACCOUNT_ID"=TO_NUMBER("ARSH"."SEND_TO_CUST_NBR")
  14	               	"CUST_ACCT_SITE_ID"="CUST_ACCT_SITE_ID"
  16	               	"LOC"."LOCATION_ID"="PARTY_SITE"."LOCATION_ID"
  26	               	"LOG"."LOCATION_ID"="LOC"."LOCATION_ID" AND "LOG"."LOCATION_TABLE_NAME"='HZ_LOCATIONS
    	               	' AND "LOG"."USAGE_CODE"='TAX'

  28	               	"HZLOC"."LOCATION_ID"="LOC"."LOCATION_ID"
  29	               	"HZLOC"."COUNTRY"="MAP"."COUNTRY_CODE" AND "MAP"."LOC_TBL_NAME"='HZ_LOCATIONS'
  32	               	"P_SITE"."LOCATION_ID"="LOC"."LOCATION_ID"
  33	               	"ACCT_SITE"."PARTY_SITE_ID"="P_SITE"."PARTY_SITE_ID"
  40	               	"HZLOC"."LOCATION_ID"="LOC"."LOCATION_ID"
  41	               	"MAP"."COUNTRY_CODE"="HZLOC"."COUNTRY" AND "MAP"."LOC_TBL_NAME"='HZ_LOCATIONS'
  44	               	"P_SITE"."LOCATION_ID"="LOC"."LOCATION_ID"
  46	               	"ACCT_SITE"."PARTY_SITE_ID"="P_SITE"."PARTY_SITE_ID"
  48	               	"G"."COUNTRY_CODE"="HZLOC"."COUNTRY" AND "G"."GEOGRAPHY_TYPE"='COUNTRY'

15 rows selected.

Elapsed: 00:00:00.13

    	               	filter
  id	OBJECT_NODE    	predicates
----	---------------	-------------------------------------------------------------------------------------
   1	               	ROWNUM<201
   2	               	"LOC_ASSIGN"."LOCATION_ID" IS NULL
  12	               	"ORG_ID"=TO_NUMBER(SYS_CONTEXT('multi_org2','current_org_id'))
  13	               	"PRIMARY_FLAG"='Y' AND ("SITE_USE_CODE"='BILL_TO' OR "SITE_USE_CODE"='STMTS') AND "OR
    	               	G_ID"=TO_NUMBER(SYS_CONTEXT('multi_org2','current_org_id'))

  25	               	"LOG"."MAP_STATUS"='S'

Elapsed: 00:00:00.14
apps@DEV
SQL> rollback;

Rollback complete.

Elapsed: 00:00:00.07
apps@DEV
SQL> select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
--            terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM
--       AR_LOOKUPS         l_cat,
--           FND_TERRITORIES_VL terr,
--            FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
	   , lwx_ar_stmt_headers arsh
     WHERE
--          addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
           1=1
--        AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
--
--        AND loc.COUNTRY = terr.TERRITORY_CODE(+)
--        AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
       and hca.cust_account_id = arsh.send_to_cust_nbr
) where rownum < 201
;



no rows selected

Elapsed: 00:02:29.55
apps@DEV
SQL> apps@DEV
SQL> select send_to_cust_nbr from lwx_ar_stmt_headers where rownum < 12;

SEND_TO_CUST_NBR
------------------------------
0000000340
0000000340
0000000340
0000000420
0000000420
0000000420
0000000590
0000000670
0000000670
0000000670
0000000750

11 rows selected.

Elapsed: 00:00:00.14
apps@DEV
SQL> select cust_account_id from hz_cust_accounts where rownum < 11;

CUST_ACCOUNT_ID
---------------
           2040
           2041
           2042
           2043
           2044
           2045
           2046
           2047
           2048
           2049

10 rows selected.

Elapsed: 00:00:00.13
apps@DEV
SQL> select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
--            terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM
--       AR_LOOKUPS         l_cat,
--           FND_TERRITORIES_VL terr,
--            FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
	   , lwx_ar_stmt_headers arsh
     WHERE
--          addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
           1=1
--        AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
--
--        AND loc.COUNTRY = terr.TERRITORY_CODE(+)
--        AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
       and to_char(hca.cust_account_id,'0000000000') = arsh.send_to_cust_nbr
) where rownum < 201
;



no rows selected

Elapsed: 00:00:24.56
apps@DEV
SQL> apps@DEV
SQL> select to_char(cust_account_id,'0000000000') from hz_cust_accounts where rownum < 11;

TO_CHAR(CUS
-----------
 0000002040
 0000002041
 0000002042
 0000002043
 0000002044
 0000002045
 0000002046
 0000002047
 0000002048
 0000002049

10 rows selected.

Elapsed: 00:00:00.11
apps@DEV
SQL> select send_to_cust_nbr from (select send_to_cust_nbr from lwx_ar_stmt_headers order by send_to_cust_nbr desc) where rownum < 31;

SEND_TO_CUST_NBR
------------------------------
7000180707
7000180707
7000114056
7000114056
7000114056
7000071286
7000071286
7000070534
7000070534
7000070534
7000070534
7000056613
7000056613
7000056613
7000051817
7000031440
7000029965
7000029882
7000029571
7000028551
7000028065
7000027687
7000027687
7000027484
7000027088
7000026871
7000026871
7000026837
7000026697
7000026697

30 rows selected.

Elapsed: 00:00:00.16
apps@DEV
SQL> select to_char(cust_account_id,'0000000000') from hz_cust_accounts where to_char(cust_account_id,'0000000000') > '70000000000';

no rows selected

Elapsed: 00:00:12.34
apps@DEV
SQL> select to_char(cust_account_id,'0000000000') from hz_cust_accounts where to_char(cust_account_id,'0000000000') > '7000000000';

no rows selected

Elapsed: 00:00:07.48
apps@DEV
SQL> select to_char(cust_account_id,'0000000000') from hz_cust_accounts where to_char(cust_account_id,'0000000000') > '0000000500';

no rows selected

Elapsed: 00:00:07.20
apps@DEV
SQL> select max(cust_account_id) l, min(cust_account_id) s from hz_cust_accounts;

              L	              S
---------------	---------------
       22456209	           2040

Elapsed: 00:00:02.28
apps@DEV
SQL> select max(send_to_cust_nbr) l, min(send_to_cust_nbr) s from lwx_ar_stmt_headers;

L                             	S
------------------------------	------------------------------
7000180707                    	0000000340

Elapsed: 00:00:00.16
apps@DEV
SQL> select to_char(max(cust_account_id),'0000000000') l, to_char(min(cust_account_id),'0000000000') s from hz_cust_accounts;

L          	S
-----------	-----------
 0022456209	 0000002040

Elapsed: 00:00:02.22
apps@DEV
SQL> select max(send_to_cust_nbr) l, min(send_to_cust_nbr) s from lwx_ar_stmt_headers 
where send_to_cust_nbr between '0010000000' and '0019999999';


L                             	S
------------------------------	------------------------------
0019892680                    	0010056100

Elapsed: 00:00:00.11
apps@DEV
SQL> select to_char(max(cust_account_id),'0000000000') l, to_char(min(cust_account_id),'0000000000') s from hz_cust_accounts
where cust_account_id between 10000000 and 19999999;


L          	S
-----------	-----------
 0019999989	 0010000533

Elapsed: 00:00:02.61
apps@DEV
SQL>
apps@DEV
SQL> 
apps@DEV
SQL> select count(*) from (select to_char(cust_account_id,'0000000000') from hz_cust_accounts where cust_account_id between 10000000 and 19999999);

       COUNT(*)
---------------
         766246

Elapsed: 00:00:01.97
apps@DEV
SQL> select send_to_cust_nbr from (select to_char(cust_account_id,'0000000000') from hz_cust_accounts where cust_account_id between 10000000 and 19999999) where mod(rownum,1000) = 0;
select send_to_cust_nbr from (select to_char(cust_account_id,'0000000000') from hz_cust_accounts where cust_account_id between 10000000 and 19999999) where mod(rownum,1000) = 0
       *
ERROR at line 1:
ORA-00904: "SEND_TO_CUST_NBR": invalid identifier


Elapsed: 00:00:00.13
apps@DEV
SQL> select to_char(cust_account_id,'0000000000') from (select to_char(cust_account_id,'0000000000') from hz_cust_accounts where cust_account_id between 10000000 and 19999999) where mod(rownum,1000) = 0;
select to_char(cust_account_id,'0000000000') from (select to_char(cust_account_id,'0000000000') from hz_cust_accounts where cust_account_id between 10000000 and 19999999) where mod(rownum,1000) = 0
               *
ERROR at line 1:
ORA-00904: "CUST_ACCOUNT_ID": invalid identifier


Elapsed: 00:00:00.16
apps@DEV
SQL> select send_to_cust_nbr
from (select to_char(cust_account_id,'0000000000') send_to_cust_nbr from hz_cust_accounts where cust_account_id between 10000000 and 19999999) where mod(rownum,1000) = 0;


no rows selected

Elapsed: 00:00:04.81
apps@DEV
SQL> select mod(1000,10) from dual;

   MOD(1000,10)
---------------
              0

Elapsed: 00:00:00.11
apps@DEV
SQL> select send_to_cust_nbr
from (select to_char(cust_account_id,'0000000000') send_to_cust_nbr from hz_cust_accounts where cust_account_id between 10000000 and 19999999) where mod(rownum,1000) = 0;


no rows selected

Elapsed: 00:00:04.42
apps@DEV
SQL> select send_to_cust_nbr
from (
  select to_char(cust_account_id,'0000000000') send_to_cust_nbr
  from hz_cust_accounts where cust_account_id between 10000000 and 19999999) where mod(rownum,1000) = 0;



no rows selected

Elapsed: 00:00:07.00
apps@DEV
SQL> apps@DEV
SQL> select send_to_cust_nbr
from (
  select to_char(cust_account_id,'0000000000') send_to_cust_nbr
  from hz_cust_accounts where cust_account_id between 10000000 and 19999999
  ) 
where mod(rownum,1000) = 1;


SEND_TO_CUS
-----------
 0010145533

Elapsed: 00:00:06.90
apps@DEV
SQL> select send_to_cust_nbr
from (
  select to_char(cust_account_id,'0000000000') send_to_cust_nbr
  from hz_cust_accounts where cust_account_id between 10000000 and 19999999
  ) 
where mod(rownum,1000) = 800;


no rows selected

Elapsed: 00:00:03.98
apps@DEV
SQL> select send_to_cust_nbr
from (
  select to_char(cust_account_id,'0000000000') send_to_cust_nbr
  from hz_cust_accounts where cust_account_id between 10000000 and 19999999
  ) 
where mod(rownum,1000) = 2;


no rows selected

Elapsed: 00:00:03.86
apps@DEV
SQL> select * from lwx_ar_stmt_headers where send_to_cust_nbr = '0010145533';

no rows selected

Elapsed: 00:00:00.09
apps@DEV
SQL> show colsep
colsep "	"
apps@DEV
SQL> @desc lwx_ar_stmt_headers
 Name                                                              Null?    Type
 ----------------------------------------------------------------- -------- --------------------------------------------
 STMT_HDR_ID                                                       NOT NULL NUMBER(22)
 STATEMENT_CYCLE_ID                                                NOT NULL NUMBER(15)
 STMT_RUN_CONC_REQ_ID                                                       NUMBER(22)
 STMT_DTE                                                          NOT NULL DATE
 STMT_CRNCY_CDE                                                    NOT NULL VARCHAR2(15)
 STMT_LANG_CDE                                                     NOT NULL VARCHAR2(3)
 PPD_PAGE_CNT                                                               NUMBER(22)
 DTL_PAGE_CNT                                                               NUMBER(22)
 INVO_PAGE_CNT                                                              NUMBER(22)
 TOTAL_PAGE_CNT                                                             NUMBER(22)
 LOGO_CDE                                                                   VARCHAR2(30)
 SEND_TO_CUST_ACCT_SITE_ID                                         NOT NULL NUMBER(22)
 SEND_TO_CUST_NBR                                                  NOT NULL VARCHAR2(30)
 SEND_TO_CUST_NME                                                  NOT NULL VARCHAR2(360)
 SEND_TO_LINE_1_ADR                                                         VARCHAR2(240)
 SEND_TO_LINE_2_ADR                                                         VARCHAR2(240)
 SEND_TO_LINE_3_ADR                                                         VARCHAR2(240)
 SEND_TO_LINE_4_ADR                                                         VARCHAR2(240)
 SEND_TO_CITY_NME                                                           VARCHAR2(60)
 SEND_TO_STATE_CDE                                                          VARCHAR2(5)
 SEND_TO_POSTAL_CDE                                                         VARCHAR2(12)
 SEND_TO_CNTRY_NME                                                          VARCHAR2(60)
 REP_PHONE_NBR                                                              VARCHAR2(30)
 OVER_DUE_AMT                                                               NUMBER
 DUE_AMT                                                                    NUMBER
 TO_PAY_AMT                                                                 NUMBER
 STMT_DUE_DTE                                                               DATE
 NOT_DUE_AMT                                                                NUMBER
 BALANCE_AMT                                                                NUMBER
 MSG1_NME                                                                   VARCHAR2(40)
 MSG2_NME                                                                   VARCHAR2(40)
 SCAN_LINE_NME                                                              VARCHAR2(50)
 LW_FAX_NBR                                                                 VARCHAR2(50)
 LW_EMAIL_ADR                                                               VARCHAR2(150)
 CREATED_BY                                                        NOT NULL NUMBER(15)
 CREATION_DATE                                                     NOT NULL DATE
 LAST_UPDATED_BY                                                   NOT NULL NUMBER(15)
 LAST_UPDATED_DATE                                                 NOT NULL DATE
 LAST_UPDATE_LOGIN                                                          NUMBER(15)
 CUST_EMAIL_ADR                                                             VARCHAR2(150)

apps@DEV
SQL> select send_to_cust_nbr, send_to_cust_nme
from lwx_ar_stmt_headers
where 


  4  apps@DEV
SQL> select send_to_cust_nbr
from (
  select to_char(cust_account_id,'0000000000') send_to_cust_nbr
  from hz_cust_accounts where cust_account_id between 10000000 and 19999999
  ) 
where mod(rownum,1000) = 2


  7  apps@DEV
SQL> clear sql
sql cleared
apps@DEV
SQL> select * from (
    SELECT loc.ADDRESS1,
           loc.ADDRESS2,
           loc.ADDRESS3,
           loc.ADDRESS4,
           loc.CITY,
           substr(loc.STATE,1,2),
           substr(loc.POSTAL_CODE,1,12),
--            terr.TERRITORY_SHORT_NAME,
           --
           nvl(loc_assign.location_id,0) good_geocode
	   --
	   , addr.cust_account_id
	   , party_site.party_id
	   , hca.account_number customer_number
      FROM
--       AR_LOOKUPS         l_cat,
--           FND_TERRITORIES_VL terr,
--            FND_LANGUAGES_VL   lang,
           HZ_CUST_ACCT_SITES addr,
           HZ_PARTY_SITES     party_site,
           HZ_CUST_SITE_USES  csu,
           HZ_LOCATIONS       loc,
           HZ_LOC_ASSIGNMENTS loc_assign
	   --
	   , hz_cust_accounts hca
	   , lwx_ar_stmt_headers arsh
     WHERE
--          addr.CUSTOMER_CATEGORY_CODE = l_cat.LOOKUP_CODE(+)
           1=1
--        AND l_cat.LOOKUP_TYPE(+) = 'ADDRESS_CATEGORY'
--
--        AND loc.COUNTRY = terr.TERRITORY_CODE(+)
--        AND loc.LANGUAGE = lang.LANGUAGE_CODE(+)
       AND addr.PARTY_SITE_ID = party_site.PARTY_SITE_ID
       AND csu.CUST_ACCT_SITE_ID = addr.CUST_ACCT_SITE_ID
       AND csu.SITE_USE_CODE IN ('STMTS','BILL_TO')
       AND NVL(csu.PRIMARY_FLAG, 'N') = 'Y'
       AND loc.LOCATION_ID = party_site.LOCATION_ID
       AND loc.LOCATION_ID = loc_assign.LOCATION_ID(+) -- n.b. this is an "optional join" OF-3393
       -- EXTRA TESTING PREDICATES, NOT PRESENT IN THE ORIGINAL QUERY:
       and loc_assign.location_id is null
       and hca.cust_account_id = addr.cust_account_id
       and hca.party_id = party_site.party_id
       and hca.account_number = arsh.send_to_cust_nbr
) where rownum < 101;


ADDRESS1                 	ADDRESS2                 	ADDRESS3                 	ADDRESS4                 	CITY                     	SU	SUBSTR(LOC.P	   GOOD_GEOCODE	CUST_ACCOUNT_ID	       PARTY_ID	CUSTOMER_NUMBER
-------------------------	-------------------------	-------------------------	-------------------------	-------------------------	--	------------	---------------	---------------	---------------	------------------------------
1306 Monte Carlo         	163 Portal de la Reina   	                         	                         	San Juan                 	PR	00924       	              0	       20134721	       26620044	2001438575
1306 Monte Carlo         	163 Portal de la Reina   	                         	                         	San Juan                 	PR	00924       	              0	       20134721	       26620044	2001438575
Condominio Marina I      	Aprt. 3903               	                         	                         	Barceloneta              	PR	00617-2514  	              0	       20497719	       27199422	2001661019
Condominio Marina I      	Aprt. 3903               	                         	                         	Barceloneta              	PR	00617-2514  	              0	       20497719	       27199422	2001661019
% Urb Puerto Nuevo       	1031 Calle Amberes       	                         	                         	San Juan                 	PR	00920-5351  	              0	           4004	          17018	0497329850
41 Sur Calle McArthur    	% Francisco Javier Reyes 	                         	                         	Guayama                  	PR	00784       	              0	       22155619	       29043805	2002409258
% Manuel Pantoja         	Bayamon Garden Station   	PO Box 4255              	                         	Bayamon                  	PR	00958-1255  	              0	        1339375	        1285465	2000173082

7 rows selected.

Elapsed: 00:16:41.02
apps@DEV
SQL>
apps@DEV
SQL> 
apps@DEV
SQL> REM STARTING TO TEST-IN-EARNEST FOR OF-3393 FROM HERE ON OUT...
apps@DEV
SQL> REM QUERYING FOR THE WAVE DATA:
apps@DEV
SQL> select wav.name
from ar.hz_cust_accounts hca,
ar.hz_customer_profiles hcp
, ar.ar_statement_cycles wav
where hca.account_number = '0497329850'
and hca.cust_account_id = hcp.cust_account_id
and hcp.site_use_id is null
and hcp.statement_cycle_id = wav.statement_cycle_id;


NAME
--------------------
WF

Elapsed: 00:00:00.13
apps@DEV
SQL> select wav.name
from ar.hz_cust_accounts hca,
ar.hz_customer_profiles hcp
, ar.ar_statement_cycles wav
where hca.account_number = '2000271783'
and hca.cust_account_id = hcp.cust_account_id
and hcp.site_use_id is null
and hcp.statement_cycle_id = wav.statement_cycle_id;


NAME
--------------------
W2

Elapsed: 00:00:00.13
apps@DEV
SQL> rem SO NOW TRYING TO GENERATE A STATEMENT FOR 2000271783:
apps@DEV
SQL> rem EXECUTED THE STATEMENT GENERATION, THANKS TO GWRIGHT CREATING SOME TRANSACTIONS FOR ME.
apps@DEV
SQL> rem NOW GRABBING THE STATEMENT HEADER KEYS SO THAT I CAN SAVE OFF THE TEST RUN BEFORE 
apps@DEV
SQL> rem DELETING THE STATEMENT DATA, REPLACING THE NEW CODE WITH THE OLD, SO THAT I CAN GET
apps@DEV
SQL> rem THE RESULTS WHICH WOULD'VE BEEN PRODUCED BY THE OLD CODE.
apps@DEV
SQL> var p_customer_nbr varchar2(20)
apps@DEV
SQL> var p_statement_cycle_nme varchar2(10)
apps@DEV
SQL> begin :p_customer_nbr := 2000271783; :p_statement_cycle_nme := 'W2'; end;
  2  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
apps@DEV
SQL> print

P_CUSTOMER_NBR
--------------------------------
2000271783


P_STATEMENT_CYCLE_NME
--------------------------------
W2

apps@DEV
SQL> begin 
autono_stmt_gen_test.copy_stmt_data(
  :p_customer_nbr,
  :p_statement_cycle_nme,
  to_date('09-mar-2020','dd-mon-yyyy hh24:mi:ss')
);
end;

.
  8  apps@DEV
SQL> select * from lwx_ar_statement_headers where send_to_customer_nbr = :p_customer_nbr;
select * from lwx_ar_statement_headers where send_to_customer_nbr = :p_customer_nbr
              *
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.11
apps@DEV
SQL> select * from lwx_ar_stmte_headers where send_to_customer_nbr = :p_customer_nbr;
select * from lwx_ar_stmte_headers where send_to_customer_nbr = :p_customer_nbr
              *
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.10
apps@DEV
SQL> select * from lwx_ar_stmt_headers where send_to_customer_nbr = :p_customer_nbr;
select * from lwx_ar_stmt_headers where send_to_customer_nbr = :p_customer_nbr
                                        *
ERROR at line 1:
ORA-00904: "SEND_TO_CUSTOMER_NBR": invalid identifier


Elapsed: 00:00:00.11
apps@DEV
SQL> select * from lwx_ar_stmt_headers where send_to_cust_nbr = :p_customer_nbr;

    STMT_HDR_ID	STATEMENT_CYCLE_ID	STMT_RUN_CONC_REQ_ID	STMT_DTE            	STMT_CRNCY_CDE 	STM	   PPD_PAGE_CNT	   DTL_PAGE_CNT	  INVO_PAGE_CNT	 TOTAL_PAGE_CNT	LOGO_CDE                      	SEND_TO_CUST_ACCT_SITE_ID	SEND_TO_CUST_NBR              	SEND_TO_CUST_NME                                                                                                                                                                                                                                                                                                                                                        	SEND_TO_LINE_1_ADR                                                                                                                                                                                                                              	SEND_TO_LINE_2_ADR                                                                                                                                                                                                                              	SEND_TO_LINE_3_ADR                                                                                                                                                                                                                              	SEND_TO_LINE_4_ADR                                                                                                                                                                                                                              	SEND_TO_CITY_NME                                            	SEND_	SEND_TO_POST	SEND_TO_CNTRY_NME                                           	REP_PHONE_NBR                 	   OVER_DUE_AMT	        DUE_AMT	     TO_PAY_AMT	STMT_DUE_DTE        	    NOT_DUE_AMT	    BALANCE_AMT	MSG1_NME                                	MSG2_NME                                	SCAN_LINE_NME                                     	LW_FAX_NBR                                        	LW_EMAIL_ADR                                                                                                                                          	     CREATED_BY	CREATION_DATE       	LAST_UPDATED_BY	LAST_UPDATED_DATE   	LAST_UPDATE_LOGIN	CUST_EMAIL_ADR
---------------	------------------	--------------------	--------------------	---------------	---	---------------	---------------	---------------	---------------	------------------------------	-------------------------	------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	------------------------------------------------------------	-----	------------	------------------------------------------------------------	------------------------------	---------------	---------------	---------------	--------------------	---------------	---------------	----------------------------------------	----------------------------------------	--------------------------------------------------	--------------------------------------------------	------------------------------------------------------------------------------------------------------------------------------------------------------	---------------	--------------------	---------------	--------------------	-----------------	--------------------
        8506106	              1001	           130872452	09-mar-2020 17:26:07	USD            	En 	              0	              1	              1	              3	RC                            	                   861557	2000271783                    	Central Baptist Church                                                                                                                                                                                                                                                                                                                                                  	41 S Chenango St                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	                                                                                                                                                                                                                                                	Greene                                                      	NY   	13778-1233  	United States                                               	1-800-453-9775                	              0	            840	            840	03-apr-2020 23:59:59	              0	            840	                                        	                                        	1111120002717830000840000000000007                	(615) 251-3914                                    	CustomerAccounts@LifeWay.com                                                                                                                          	          32418	09-mar-2020 17:26:07	          32418	09-mar-2020 17:26:07	        142966941	

Elapsed: 00:00:00.29
apps@DEV
SQL> begin 
autono_stmt_gen_test.copy_stmt_data(
  :p_customer_nbr,
  :p_statement_cycle_nme,
  to_date('09-mar-2020 17:26:07','dd-mon-yyyy hh24:mi:ss')
);
end;

.
  8  apps@DEV
SQL> /
Copied 1 rows into tst_lwx_ar_stmt_line_details.
Copied 1 rows into tst_lwx_ar_stmt_lines.
Copied 2 rows into tst_lwx_ar_stmt_headers.

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.31
apps@DEV
SQL> rem NOW DELETING OUT THE STATEMENT DATA SO THAT WE CAN RUN AGAIN, WITH THE "OLD" CODE:
apps@DEV
SQL> declare 
  l_error_msg varchar2(2000); 
  l_error_code number; 
begin
  lwx_ar_delete_statements.delete_stmt(
    p_error_msg => l_error_msg,
    p_error_code => l_error_code,
    p_stmt_hdr_id => 8506106,  -- <<<< As seen in the above query against the rstewar.v_ar_stmt_invo
    p_request_id => null
  );
  dbms_output.put_line('Returned error msg:  '||substr(l_error_msg, 1,150));
  dbms_output.put_line('Returned error code:  '||to_char(l_error_code, 'tm9'));
end;

.
 14  apps@DEV
SQL> /
Returned error msg:
Returned error code:

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.24
apps@DEV
SQL> @lwx_ar_info_stmt_print-20200225-original-package-version
SP2-0310: unable to open file "lwx_ar_info_stmt_print-20200225-original-package-version.sql"
apps@DEV
SQL> host cd
c:\Users\rstewar\Documents\OF-3392\test-harness

apps@DEV
SQL> @..\lwx_ar_info_stmt_print-20200225-original-package-version
SP2-0310: unable to open file "..\lwx_ar_info_stmt_print-20200225-original-package-version.sql"
apps@DEV
SQL> @..\lwx_ar_invo_stmt_print-20200225-original-package-version

Package created.

Elapsed: 00:00:00.20

Package body created.

Elapsed: 00:00:15.34
apps@DEV
SQL> rem OKAY, SO THE OLDER VERSION OF THE CODE WAS INSTALLED SO THAT A TEST COULD BE RUN OF THE "OLD" STUFF.
apps@DEV
SQL> rem NOW THE NEW STUFF NEEDS TO BE PUT BACK IN...
apps@DEV
SQL> @getcode apps lwx_ar_invo_stmt_print lwx_ar_invo_stmt_print-20200310-morning
apps@DEV
SQL> rem VERIFIED THAT I HAD INSTALLED THE "ORIGINAL PACKAGE" VERSION LAST NIGHT(!) TO DO TESTING RUN OF THE "ORIGINAL CODE"
apps@DEV
SQL> rem NOW WILL RE-INSTALL THE "NEW" VERSION OF THE PACKAGE:
apps@DEV
SQL> @..\LWX_AR_INVO_STMT_PRINT_PKB

Package body created.

Elapsed: 00:00:12.46
apps@DEV
SQL> @..\LWX_AR_INVO_STMT_PRINT_PKS

Package created.

Elapsed: 00:00:00.75
apps@DEV
SQL> show status package lwx_ar_invo_stmt_print
SP2-0158: unknown SHOW option "status"
SP2-0158: unknown SHOW option "package"
SP2-0735: unknown SHOW option beginning "lwx_ar_inv..."
apps@DEV
SQL> @desc use_programs
ERROR:
ORA-04043: object use_programs does not exist


apps@DEV
SQL> @desc user_code
ERROR:
ORA-04043: object user_code does not exist


apps@DEV
SQL> @desc user_objects
 Name                                                              Null?    Type
 ----------------------------------------------------------------- -------- --------------------------------------------
 OBJECT_NAME                                                                VARCHAR2(128)
 SUBOBJECT_NAME                                                             VARCHAR2(30)
 OBJECT_ID                                                                  NUMBER
 DATA_OBJECT_ID                                                             NUMBER
 OBJECT_TYPE                                                                VARCHAR2(19)
 CREATED                                                                    DATE
 LAST_DDL_TIME                                                              DATE
 TIMESTAMP                                                                  VARCHAR2(19)
 STATUS                                                                     VARCHAR2(7)
 TEMPORARY                                                                  VARCHAR2(1)
 GENERATED                                                                  VARCHAR2(1)
 SECONDARY                                                                  VARCHAR2(1)
 NAMESPACE                                                                  NUMBER
 EDITION_NAME                                                               VARCHAR2(30)

apps@DEV
SQL> select object_name, created, last_ddl_time, timestamp, status
from dba_objects
where owner='APPS' and objec_name = 'LWX_AR_INVO_STMT_PRINT';

where owner='APPS' and objec_name = 'LWX_AR_INVO_STMT_PRINT'
                       *
ERROR at line 3:
ORA-00904: "OBJEC_NAME": invalid identifier


Elapsed: 00:00:00.12
apps@DEV
SQL> select object_name, created, last_ddl_time, timestamp, status
from dba_objects
where owner='APPS' and object_name = 'LWX_AR_INVO_STMT_PRINT';


OBJECT_NAME         	CREATED             	LAST_DDL_TIME       	TIMESTAMP          	STATUS
--------------------	--------------------	--------------------	-------------------	----------
LWX_AR_INVO_STMT_PRI	03-jan-2009 18:50:08	10-mar-2020 09:43:49	2020-03-10:09:43:49	VALID
NT                  	                    	                    	                   	

LWX_AR_INVO_STMT_PRI	03-jan-2009 19:18:55	10-mar-2020 09:43:26	2020-03-10:09:43:26	INVALID
NT                  	                    	                    	                   	


2 rows selected.

Elapsed: 00:00:00.15
apps@DEV
SQL> select object_name, subobjec_name, created, last_ddl_time, timestamp, status
from dba_objects
where owner='APPS' and object_name = 'LWX_AR_INVO_STMT_PRINT';

select object_name, subobjec_name, created, last_ddl_time, timestamp, status
                    *
ERROR at line 1:
ORA-00904: "SUBOBJEC_NAME": invalid identifier


Elapsed: 00:00:00.11
apps@DEV
SQL> select object_name, subobject_name, created, last_ddl_time, timestamp, status
from dba_objects
where owner='APPS' and object_name = 'LWX_AR_INVO_STMT_PRINT';


OBJECT_NAME         	SUBOBJECT_NAME                	CREATED             	LAST_DDL_TIME       	TIMESTAMP          	STATUS
--------------------	------------------------------	--------------------	--------------------	-------------------	----------
LWX_AR_INVO_STMT_PRI	                              	03-jan-2009 18:50:08	10-mar-2020 09:43:49	2020-03-10:09:43:49	VALID
NT                  	                              	                    	                    	                   	

LWX_AR_INVO_STMT_PRI	                              	03-jan-2009 19:18:55	10-mar-2020 09:43:26	2020-03-10:09:43:26	INVALID
NT                  	                              	                    	                    	                   	


2 rows selected.

Elapsed: 00:00:00.15
apps@DEV
SQL> select *
from dba_objects
where owner='APPS' and object_name = 'LWX_AR_INVO_STMT_PRINT';


OWNER                         	OBJECT_NAME         	SUBOBJECT_NAME                	      OBJECT_ID	 DATA_OBJECT_ID	OBJECT_TYPE        	CREATED             	LAST_DDL_TIME       	TIMESTAMP          	STATUS    	T	G	S	      NAMESPACE	EDITION_NAME
------------------------------	--------------------	------------------------------	---------------	---------------	-------------------	--------------------	--------------------	-------------------	----------	-	-	-	---------------	------------------------------
APPS                          	LWX_AR_INVO_STMT_PRI	                              	         202014	               	PACKAGE            	03-jan-2009 18:50:08	10-mar-2020 09:43:49	2020-03-10:09:43:49	VALID     	N	N	N	              1	
                              	NT                  	                              	               	               	                   	                    	                    	                   	          	 	 	 	               	

APPS                          	LWX_AR_INVO_STMT_PRI	                              	         234515	               	PACKAGE BODY       	03-jan-2009 19:18:55	10-mar-2020 09:43:26	2020-03-10:09:43:26	INVALID   	N	N	N	              2	
                              	NT                  	                              	               	               	                   	                    	                    	                   	          	 	 	 	               	


2 rows selected.

Elapsed: 00:00:00.15
apps@DEV
SQL> alter package apps.lwx_ar_invo_stmt_print compile;

Package altered.

Elapsed: 00:00:03.45
apps@DEV
SQL> select object_name, object_type, created, last_ddl_time, timestamp, status
from dba_objects
where owner='APPS' and object_name = 'LWX_AR_INVO_STMT_PRINT';


OBJECT_NAME         	OBJECT_TYPE        	CREATED             	LAST_DDL_TIME       	TIMESTAMP          	STATUS
--------------------	-------------------	--------------------	--------------------	-------------------	----------
LWX_AR_INVO_STMT_PRI	PACKAGE            	03-jan-2009 18:50:08	10-mar-2020 09:47:00	2020-03-10:09:43:49	VALID
NT                  	                   	                    	                    	                   	

LWX_AR_INVO_STMT_PRI	PACKAGE BODY       	03-jan-2009 19:18:55	10-mar-2020 09:47:03	2020-03-10:09:43:26	VALID
NT                  	                   	                    	                    	                   	


2 rows selected.

Elapsed: 00:00:00.15
apps@DEV
SQL> @..\LWX_AR_INVO_STMT_PRINT_PKB

Package body created.

Elapsed: 00:00:10.07
apps@DEV
SQL> @..\LWX_AR_INVO_STMT_PRINT_PKS

Package created.

Elapsed: 00:00:00.59
apps@DEV
SQL> select object_name, object_type, created, last_ddl_time, timestamp, status
from dba_objects
where owner='APPS' and object_name = 'LWX_AR_INVO_STMT_PRINT';


OBJECT_NAME         	OBJECT_TYPE        	CREATED             	LAST_DDL_TIME       	TIMESTAMP          	STATUS
--------------------	-------------------	--------------------	--------------------	-------------------	----------
LWX_AR_INVO_STMT_PRI	PACKAGE            	03-jan-2009 18:50:08	10-mar-2020 10:38:38	2020-03-10:10:38:38	VALID
NT                  	                   	                    	                    	                   	

LWX_AR_INVO_STMT_PRI	PACKAGE BODY       	03-jan-2009 19:18:55	10-mar-2020 10:38:22	2020-03-10:10:38:22	INVALID
NT                  	                   	                    	                    	                   	


2 rows selected.

Elapsed: 00:00:00.21
apps@DEV
SQL> alter package body lwx_ar_invo_stmt_print compile;
alter package body lwx_ar_invo_stmt_print compile
                   *
ERROR at line 1:
ORA-00922: missing or invalid option


Elapsed: 00:00:00.11
apps@DEV
SQL> alter package body apps.lwx_ar_invo_stmt_print compile;
alter package body apps.lwx_ar_invo_stmt_print compile
                   *
ERROR at line 1:
ORA-00922: missing or invalid option


Elapsed: 00:00:00.11
apps@DEV
SQL> alter package apps.lwx_ar_invo_stmt_print compile;

Package altered.

Elapsed: 00:00:04.56
apps@DEV
SQL> select object_name, object_type, created, last_ddl_time, timestamp, status
from dba_objects
where owner='APPS' and object_name = 'LWX_AR_INVO_STMT_PRINT';


OBJECT_NAME         	OBJECT_TYPE        	CREATED             	LAST_DDL_TIME       	TIMESTAMP          	STATUS
--------------------	-------------------	--------------------	--------------------	-------------------	----------
LWX_AR_INVO_STMT_PRI	PACKAGE            	03-jan-2009 18:50:08	10-mar-2020 10:39:35	2020-03-10:10:38:38	VALID
NT                  	                   	                    	                    	                   	

LWX_AR_INVO_STMT_PRI	PACKAGE BODY       	03-jan-2009 19:18:55	10-mar-2020 10:39:38	2020-03-10:10:38:22	VALID
NT                  	                   	                    	                    	                   	


2 rows selected.

Elapsed: 00:00:00.16
apps@DEV
SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP and Data Mining options

Process SQL finished

